document.write如果在页面加载完后执行将会覆盖原有内容
eg<button inclick>中执行document.write页面将会重置

数值+字符串 此时数值将转换为字符串
1 + 2 +"3" = "33"
使用从左到右的顺序，第一次遇到字符串时转化为字符串

const对象可以对其成员赋值，常量数组可以为其元素赋值，但不能整体重新赋值
const的作用方式与let相同

**表示幂运算符

>>>无符号右位移运算符

null的类型为对象object
数组在js内部为对象，typeof 数组是，返回的为object

访问没有()的函数即为函数的定义

函数中的this指代函数的拥有者

HTML事件可在html标签中使用
[event] = "[js中的函数]()"调用
事件函数中this指代被操作的html元素

在定义字符串时，折断代码要在折断处加上\
一般情况下折断只需换行

对象无法比较，使用==或===将始终返回false

使用var a = new Number(100)此时a将为对象，其他内置类型同

字符串成员函数
length 获取字符串的长度
indexOf("[字符串]", 开始位置)获取字符串第一次出现的位置，不存在返回-1
lastIndexOf...同，返回最后一次出现的位置 ，从开始位置向后检索
search("[字符串]")同indexof，但可用正则表达式，无法设置开始位置
slice(a, b)从a到b裁剪字符串，负数参数表示由后向前
substring同上，不接受负数参数
substr同上，第二个参数为长度
replace("[搜索字符串]", "[替换字符串]")，只替换第一个匹配的字符串，可用正则表达式
charAt(索引)返回索引处的字符
charCodeAt(索引)返回索引处的unicode
[]同charAt，但是是只读的，超出长度返回undefined，charAt返回空字符串
str[5] = "a" 不改变str[5]的值
split(分隔符)，将字符串转换为数组，分隔符为空字符串时，将间隔单个字符，无分隔符时返回数组的[0]为原字符串
可用于拆分url中的get参数
match("[正则表达式]修饰符")返回一个字符串数组，包含所有匹配的字符串，修饰符g 全局搜索，否则将只返回一个结果，修饰符i不区分大小写

模板字符串 `` 可以包含多行，可以直接使用单双引号，使用${}指代变量

number始终为双精度浮点型
除+，数值与字符串运算，将会把字符串作为数值处理，当无法转换将返回NaN
如果计算中出现NaN，结果必为NaN
使用isNaN判断一个数值是否为NaN



