cout可使用其成员函数控制输入格式(见c++priemplus p601)
cout.width() //设置输出宽度，不会截断，只对下一次输出有效
cout.fill(char) //设置填充字符，始终有效
cout.precision(int) //设置小数精度，默认模式下为总位数

cout.setf(long, long) //设置其他输出选项
cout.setf(ios_base::showpoint) //显示小数点（精度仍然为总位数 精度为2时输出20.87将显示20.）
其他参数
ios_base::boolalpha 以true/false输出bool
showbase 显示进制
uppercase 大写显示十六进制
showpos 显示正数的+

双参数
第二个为ios_base::basefield
ios_base::dec 十进制
ios_base::oct 八进制
ios_base::hex 十六进制

第二个为ios_base::floatfield
fixed 定点计数法
scientific 科学计数法
在这两个模式下，精度指小数后的指

第二个为ios_base::adjustfield
ios_base::left 左对齐
ios_base::right 右对齐
ios_base::internal 符号左对齐数字右对齐

read与get
get(char&) 读一个字符(get独有)
read(char*,  int)//不会再结尾补充\0且不会再\n处停下
get(char*, int)//会补充\0且会在\n处停下
读取二进制文件时要加上ios::binary,当读取字节超过文件字节时才不会出错