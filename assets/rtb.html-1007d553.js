import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,b as a,d as s,a as e,e as n}from"./app-8c5ce49e.js";const o={},r=a("h1",{id:"机器人工具箱-robotics-toolbox",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#机器人工具箱-robotics-toolbox","aria-hidden":"true"},"#"),s(" 机器人工具箱 Robotics Toolbox")],-1),u=a("p",null,"为 matlab 下机器人工具箱的 Python 版本",-1),m=a("h2",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),s(" 安装")],-1),d=a("code",null,"pip install roboticstoolbox-python",-1),h=a("br",null,null,-1),k={href:"https://petercorke.github.io/robotics-toolbox-python/intro.html",target:"_blank",rel:"noopener noreferrer"},b=n(`<h3 id="模块导入" tabindex="-1"><a class="header-anchor" href="#模块导入" aria-hidden="true">#</a> 模块导入</h3><p>使用以下命令导入模块<br> 作为辅助, 通常还会导入模块 matplotlib, numpy 与 spatialmath.base (空间运算)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> roboticstoolbox <span class="token keyword">as</span> rtb
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> spatialmath<span class="token punctuation">.</span>base <span class="token keyword">as</span> stm
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用注意" tabindex="-1"><a class="header-anchor" href="#使用注意" aria-hidden="true">#</a> 使用注意</h3><ol><li>若安装模块失败, 需要安装 VS2019 及其 C++ 运行组件</li><li>无法在 Jupyter 环境下查看机器人</li><li>python 中的矩阵乘法应使用运算符 <code>@</code></li></ol><h2 id="机械臂建模" tabindex="-1"><a class="header-anchor" href="#机械臂建模" aria-hidden="true">#</a> 机械臂建模</h2><h3 id="关节位置描述" tabindex="-1"><a class="header-anchor" href="#关节位置描述" aria-hidden="true">#</a> 关节位置描述</h3><h4 id="标准型" tabindex="-1"><a class="header-anchor" href="#标准型" aria-hidden="true">#</a> 标准型</h4>`,8),g=a("p",null,[s("基座 (关节 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mn",null,"0")]),a("annotation",{encoding:"application/x-tex"},"0")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"0")])])]),s(") 处以水平向右为 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"x")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"x")])])]),s(" 轴正方向, 以竖直向上为 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"z")]),a("annotation",{encoding:"application/x-tex"},"z")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z")])])]),s(" 轴正方向"),a("br"),s(" 之后的关节均以上一个关节作为起点进行变换"),a("br"),a("mark",null,[s("关节的 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"z")]),a("annotation",{encoding:"application/x-tex"},"z")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z")])])]),s(" 轴为关节的旋转方向")])],-1),x=a("p",null,[s("使用参数 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"θ"),a("mo",{separator:"true"},","),a("mi",null,"d"),a("mo",{separator:"true"},","),a("mi",null,"a"),a("mo",{separator:"true"},","),a("mi",null,"α")]),a("annotation",{encoding:"application/x-tex"},"\\theta,d,a,\\alpha")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"d"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"a"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α")])])]),s(" 描述两个关节之间的相对位置")],-1),y=a("ul",null,[a("li",null,[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"θ")]),a("annotation",{encoding:"application/x-tex"},"\\theta")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])]),s(" 表示将基准坐标系的 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"z")]),a("annotation",{encoding:"application/x-tex"},"z")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z")])])]),s(" 轴旋转弧度")]),a("li",null,[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"d")]),a("annotation",{encoding:"application/x-tex"},"d")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"d")])])]),s(" 表示沿旋转后的坐标系的 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"z")]),a("annotation",{encoding:"application/x-tex"},"z")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z")])])]),s(" 轴正方向移动距离")]),a("li",null,[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"a")]),a("annotation",{encoding:"application/x-tex"},"a")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"a")])])]),s(" 表示沿移动后的坐标系的 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"x")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"x")])])]),s(" 轴正方向移动距离")]),a("li",null,[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"α")]),a("annotation",{encoding:"application/x-tex"},"\\alpha")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α")])])]),s(" 表示将移动后坐标系的 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"x")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"x")])])]),s(" 轴旋转弧度")])],-1),v=a("p",null,"注意",-1),w=a("ul",null,[a("li",null,"当关节的旋转方向与连杆方向平行时, 关节可以在连杆上任意位置")],-1),_=a("h4",{id:"改进型",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#改进型","aria-hidden":"true"},"#"),s(" 改进型")],-1),f=a("p",null,[s("与标准型相同, 但是转换顺序改变, 对于改进型描述使用 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"α"),a("mo",{separator:"true"},","),a("mi",null,"a"),a("mo",{separator:"true"},","),a("mi",null,"θ"),a("mo",{separator:"true"},","),a("mi",null,"d")]),a("annotation",{encoding:"application/x-tex"},"\\alpha,a,\\theta,d")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"a"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"d")])])]),s(" 的顺序即")],-1),M=a("ul",null,[a("li",null,[s("首先沿 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"x")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"x")])])]),s(" 轴旋转 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"α")]),a("annotation",{encoding:"application/x-tex"},"\\alpha")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α")])])])]),a("li",null,[s("再沿 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"x")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"x")])])]),s(" 轴正方向移动 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"a")]),a("annotation",{encoding:"application/x-tex"},"a")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"a")])])])]),a("li",null,[s("然后沿 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"z")]),a("annotation",{encoding:"application/x-tex"},"z")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z")])])]),s(" 轴旋转 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"θ")]),a("annotation",{encoding:"application/x-tex"},"\\theta")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])])]),a("li",null,[s("最后沿 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"z")]),a("annotation",{encoding:"application/x-tex"},"z")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z")])])]),s(" 轴正方向移动 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"d")]),a("annotation",{encoding:"application/x-tex"},"d")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"d")])])])])],-1),z=n('<h3 id="建模编程" tabindex="-1"><a class="header-anchor" href="#建模编程" aria-hidden="true">#</a> 建模编程</h3><h4 id="确定位置-定义连杆" tabindex="-1"><a class="header-anchor" href="#确定位置-定义连杆" aria-hidden="true">#</a> 确定位置 (定义连杆)</h4><p>使用函数 <code>rtb.DHLink</code> 确定关节位置 (即定义连杆)</p><ul><li><p>函数原型 <code>L = rtb.DHLink(d, alpha, theta, a, sigma, mdh, offset, flip, qlim)</code></p></li><li><p>参数</p><ul><li><code>theta, d, a, alpha</code> 实数<br> 即关节相对位置的<a href="#%E5%85%B3%E8%8A%82%E7%9B%B8%E5%AF%B9%E4%BD%8D%E7%BD%AE%E6%8F%8F%E8%BF%B0">描述参数</a></li><li><code>sigma</code> 实数 <code>0, 1</code><br> 关节类型 <ul><li><code>0</code> 表明旋转关节</li><li><code>1</code> 表明移动关节</li></ul></li><li><code>mdh</code> 布尔值<br> 建模方式 <ul><li><code>True</code> <a href="#%E6%A0%87%E5%87%86%E5%9E%8B%E5%BB%BA%E6%A8%A1">标准型建模</a>, 默认值</li><li><code>False</code> <a href="#%E6%94%B9%E8%BF%9B%E5%9E%8B%E5%BB%BA%E6%A8%A1">改进型建模</a></li></ul></li><li><code>offset</code> 实数<br> 关节偏置 <ul><li>对于旋转关节, <code>theta</code> 应取 0, 并将其作为偏置 <code>offset = theta</code></li><li>对于移动关节, <code>d</code> 应取 0, 并将其作为偏置 <code>offset = d</code></li></ul></li><li><code>flip</code> 布尔值<br> 关节旋转方向, 取 <code>True</code> 时表示关节反向旋转</li><li><code>qlim</code> 2 元素列表<br> 关节限位, 第一个元素为负限位, 第二个元素为正限位</li></ul></li><li><p>返回值<br> 返回创建的连杆对象</p></li></ul><h4 id="创建机械壁-串联连杆" tabindex="-1"><a class="header-anchor" href="#创建机械壁-串联连杆" aria-hidden="true">#</a> 创建机械壁 (串联连杆)</h4><p>使用函数 <code>rtb.SerialLink</code> 创建机械臂 (即串联连杆)</p><ul><li>函数原型 <code>SL = SerialLink(LINKS, name =)</code></li><li>参数 <ul><li><code>LINKS</code> 连杆对象列表<br> 按机器人连杆顺序组成的列表</li><li><code>name</code> 字符串<br> 机械臂名称</li></ul></li><li>返回值 返回创建的机械臂对象</li></ul><h4 id="设置基座" tabindex="-1"><a class="header-anchor" href="#设置基座" aria-hidden="true">#</a> 设置基座</h4>',8),L=a("p",null,[s("默认情况下, 第 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mn",null,"0")]),a("annotation",{encoding:"application/x-tex"},"0")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"0")])])]),s(" 个关节即基座, 不通过 "),a("code",null,"Link"),s(" 定义"),a("br"),s(" 而是设置第 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mn",null,"1")]),a("annotation",{encoding:"application/x-tex"},"1")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"1")])])]),s(" 个关节相对基座的位置"),a("br"),s(" 设置位置使用如下代码")],-1),E=n(`<p><code>SL.base = stm.transl(x, y, z)</code></p><ul><li><code>SL.base</code> 为机械臂对象的 <code>base</code> 成员</li><li><code>transl</code> 为创建一个平移变换矩阵</li></ul><h4 id="显示模型" tabindex="-1"><a class="header-anchor" href="#显示模型" aria-hidden="true">#</a> 显示模型</h4><p>通过调用机械臂对象的 <code>SL.teach(None)</code> 成员函数, 绘制创建好的机械臂模型</p><h4 id="建模例程" tabindex="-1"><a class="header-anchor" href="#建模例程" aria-hidden="true">#</a> 建模例程</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
L<span class="token punctuation">.</span>append<span class="token punctuation">(</span>rtb<span class="token punctuation">.</span>DHLink<span class="token punctuation">(</span><span class="token number">0.216</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
L<span class="token punctuation">.</span>append<span class="token punctuation">(</span>rtb<span class="token punctuation">.</span>DHLink<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> offset <span class="token operator">=</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># type: ignore</span>
L<span class="token punctuation">.</span>append<span class="token punctuation">(</span>rtb<span class="token punctuation">.</span>DHLink<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">0.145</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">0.4246</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> offset <span class="token operator">=</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>arctan<span class="token punctuation">(</span><span class="token number">427.46</span> <span class="token operator">/</span> <span class="token number">145</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
L<span class="token punctuation">.</span>append<span class="token punctuation">(</span>rtb<span class="token punctuation">.</span>DHLink<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> offset <span class="token operator">=</span> np<span class="token punctuation">.</span>arctan<span class="token punctuation">(</span><span class="token number">427.46</span> <span class="token operator">/</span> <span class="token number">145</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
L<span class="token punctuation">.</span>append<span class="token punctuation">(</span>rtb<span class="token punctuation">.</span>DHLink<span class="token punctuation">(</span><span class="token number">0.258</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

Five_dof <span class="token operator">=</span> rtb<span class="token punctuation">.</span>SerialLink<span class="token punctuation">(</span>L<span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&#39;5-dof&#39;</span><span class="token punctuation">)</span>
Five_dof<span class="token punctuation">.</span>base <span class="token operator">=</span> stm<span class="token punctuation">.</span>transl<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.28</span><span class="token punctuation">)</span>
Five_dof<span class="token punctuation">.</span>teach<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="空间数学" tabindex="-1"><a class="header-anchor" href="#空间数学" aria-hidden="true">#</a> 空间数学</h2><h3 id="概念解释" tabindex="-1"><a class="header-anchor" href="#概念解释" aria-hidden="true">#</a> 概念解释</h3><h4 id="欧拉角" tabindex="-1"><a class="header-anchor" href="#欧拉角" aria-hidden="true">#</a> 欧拉角</h4><p>欧拉角使用 z-y-z 的顺序旋转物体, 采用的坐标系为旋转时的物体坐标系<br> 首先物体绕 z 轴旋转, 之后绕 z 轴旋转后的 y 轴旋转, 最后绕 z, y 旋转后的 z 轴旋转<br> 因此相当于</p>`,10),q=a("p",{class:"katex-block"},[a("span",{class:"katex-display"},[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("semantics",null,[a("mrow",null,[a("mi",null,"R"),a("mo",null,"="),a("mi",null,"I"),a("mo",null,"⋅"),a("msub",null,[a("mi",null,"R"),a("mi",null,"z")]),a("mo",null,"⋅"),a("msub",null,[a("mi",null,"R"),a("mi",null,"y")]),a("mo",null,"⋅"),a("msub",null,[a("mi",null,"R"),a("mi",null,"z")])]),a("annotation",{encoding:"application/x-tex"}," R=I\\cdot R_z\\cdot R_y\\cdot R_z ")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"⋅"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.04398em"}},"z")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"⋅"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.2861em"}},[a("span")])])])])]),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"⋅"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.04398em"}},"z")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])])])])],-1),A=a("p",null,[s("即原始坐标系分别右乘 (每次旋转改变原始坐标系, 即矩阵的列) "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"z"),a("mo",{separator:"true"},","),a("mi",null,"y"),a("mo",{separator:"true"},","),a("mi",null,"z")]),a("annotation",{encoding:"application/x-tex"},"z,y,z")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z")])])]),s(" 轴上的旋转矩阵")],-1),B=a("h4",{id:"方位角",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#方位角","aria-hidden":"true"},"#"),s(" 方位角")],-1),S=a("p",null,[s("方位角使用 x-y-z 的顺序旋转物体, 采用的坐标系为绝对坐标系 物体依次按 x (横滚), y (俯仰), z (航偏) 的顺序旋转, 始终以绝对坐标系的轴为基准"),a("br"),s(" 因此相当于")],-1),R=a("p",{class:"katex-block"},[a("span",{class:"katex-display"},[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("semantics",null,[a("mrow",null,[a("mi",null,"R"),a("mo",null,"="),a("msub",null,[a("mi",null,"R"),a("mi",null,"z")]),a("mo",null,"⋅"),a("msub",null,[a("mi",null,"R"),a("mi",null,"y")]),a("mo",null,"⋅"),a("msub",null,[a("mi",null,"R"),a("mi",null,"x")]),a("mo",null,"⋅"),a("mi",null,"I")]),a("annotation",{encoding:"application/x-tex"}," R=R_z\\cdot R_y\\cdot R_x\\cdot I ")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.04398em"}},"z")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"⋅"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.2861em"}},[a("span")])])])])]),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"⋅"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight"},"x")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"⋅"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I")])])])])],-1),j=a("p",null,[s("即原始坐标系分别左乘 (每次旋转基于原始坐标系) "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"x"),a("mo",{separator:"true"},","),a("mi",null,"y"),a("mo",{separator:"true"},","),a("mi",null,"z")]),a("annotation",{encoding:"application/x-tex"},"x,y,z")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal"},"x"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z")])])]),s(" 轴上的旋转矩阵")],-1),T=a("h4",{id:"变换矩阵",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#变换矩阵","aria-hidden":"true"},"#"),s(" 变换矩阵")],-1),F=a("p",null,[s("对于一般的 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mn",null,"3"),a("mo",null,"×"),a("mn",null,"3")]),a("annotation",{encoding:"application/x-tex"},"3\\times 3")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),a("span",{class:"mord"},"3"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"×"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"3")])])]),s(" 的矩阵仅能体现坐标轴, 而无法体现物体的位置变换")],-1),D=a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mn",null,"4"),a("mo",null,"×"),a("mn",null,"4")]),a("annotation",{encoding:"application/x-tex"},"4\\times 4")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),a("span",{class:"mord"},"4"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"×"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"4")])])],-1),X=a("br",null,null,-1),I={href:"https://zhuanlan.zhihu.com/p/356878461",target:"_blank",rel:"noopener noreferrer"},N=a("p",null,[s("变换矩阵在右乘 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"A")]),a("annotation",{encoding:"application/x-tex"},"A")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal"},"A")])])]),s(" 时, 相当于在物体 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"A")]),a("annotation",{encoding:"application/x-tex"},"A")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal"},"A")])])]),s(" 的坐标系的基础上进行变换 (移动或旋转)"),a("br"),s(" 变换矩阵在左乘 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"A")]),a("annotation",{encoding:"application/x-tex"},"A")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal"},"A")])])]),s(" 时, 相当于在绝对坐标系的基础上对 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"A")]),a("annotation",{encoding:"application/x-tex"},"A")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal"},"A")])])]),s(" 进行变换 (移动或旋转)")],-1),C=a("p",null,[s("例如以下代码 "),a("code",null,"R1 = stm.eul2tr(30, 60, 90, 'deg') @ stm.transl(1, 2, 3)"),s(" 可使用以下方式理解")],-1),V=a("ul",null,[a("li",null,"先以欧拉角在原始坐标系基础上旋转, 然后以物体坐标系为基准移动 (右乘)"),a("li",null,[s("先移动到绝对坐标 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mn",null,"1"),a("mo",{separator:"true"},","),a("mn",null,"2"),a("mo",{separator:"true"},","),a("mn",null,"3")]),a("annotation",{encoding:"application/x-tex"},"1,2,3")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8389em","vertical-align":"-0.1944em"}}),a("span",{class:"mord"},"1"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord"},"2"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord"},"3")])])]),s(", 然后以绝对坐标系为中心旋转 (左乘)")])],-1),H=n(`<h3 id="数学函数" tabindex="-1"><a class="header-anchor" href="#数学函数" aria-hidden="true">#</a> 数学函数</h3><h4 id="单轴旋转矩阵" tabindex="-1"><a class="header-anchor" href="#单轴旋转矩阵" aria-hidden="true">#</a> 单轴旋转矩阵</h4><p>使用函数 <code>stm.rotx/y/z</code> 获取单轴旋转矩阵 (此处以 <code>stm.rotx</code> 为例)</p><ul><li>函数原型 <code>r = stm.rotx(phi, unit)</code></li><li>参数 <ul><li><code>phi</code> 实数<br> 沿 x 轴的旋转角度, 默认使用弧度制</li><li><code>unit</code> 字符串<br> 角度单位, <code>rad</code> 表示弧度制 (默认), <code>deg</code> 表示角度制</li></ul></li><li>返回值<br> 对应的旋转矩阵</li><li>注意<br> 通过函数 <code>stm.trox/y/z</code> 可用于获取相应的变换矩阵, 其余语法同</li></ul><h4 id="欧拉角旋转矩阵" tabindex="-1"><a class="header-anchor" href="#欧拉角旋转矩阵" aria-hidden="true">#</a> 欧拉角旋转矩阵</h4><p>使用函数 <code>stm.eul2r</code> 获取特定欧拉角对应的旋转矩阵</p><ul><li>函数原型 <code>r = stm.eul2r(z, y, x, unit)</code></li><li>参数 <ul><li><code>z, y, x</code> 实数<br> 欧拉角的旋转角度, 使用弧度制</li><li><code>unit</code> 字符串<br> 角度单位, <code>rad</code> 表示弧度制 (默认), <code>deg</code> 表示角度制</li></ul></li><li>返回值 对应的旋转矩阵, 相当于 <code>stm.eul2r(z, y, x) = stm.rotz(z) @ stm.roty(y) @ stm.rotz(x)</code></li><li>注意<br> 通过函数 <code>stm.eul2tr</code> 可用于获取相应的变换矩阵, 其余语法同</li></ul><h4 id="方位角旋转矩阵" tabindex="-1"><a class="header-anchor" href="#方位角旋转矩阵" aria-hidden="true">#</a> 方位角旋转矩阵</h4><p>使用函数 <code>stm.rpy2r</code> 获取特定方位角对应的旋转矩阵</p><ul><li>函数原型 <code>r = stm.rpy2r(x, y, z, unit)</code></li><li>参数 <ul><li><code>x, y, z</code> 实数<br> 方位角的旋转角度, 使用弧度制</li><li><code>unit</code> 字符串<br> 角度单位, <code>rad</code> 表示弧度制 (默认), <code>deg</code> 表示角度制</li></ul></li><li>返回值 对应的旋转矩阵, 相当于 <code>stm.rpy2r(z, y, x) = stm.rotz(z) @ stm.roty(y) @ stm.rotx(x)</code></li><li>注意<br> 通过函数 <code>stm.rpy2tr</code> 可用于获取相应的变换矩阵, 其余语法同</li></ul><h4 id="移动变换矩阵" tabindex="-1"><a class="header-anchor" href="#移动变换矩阵" aria-hidden="true">#</a> 移动变换矩阵</h4><p>使用函数 <code>stm.transl</code> 获取移动变换矩阵, 或获取变换矩阵的移动量 (相对原点)</p><ul><li>函数原型 <code>t = stm.transl(x, y, z)</code></li><li>参数 <ul><li><code>x, y, z</code> 实数<br> 沿 x, y, z 方向移动距离</li></ul></li><li>返回值<br> 对应的变换矩阵</li><li>注意<br> 该函数也可用于求解变换矩阵的移动量</li></ul><h4 id="旋转矩阵转换为变换矩阵" tabindex="-1"><a class="header-anchor" href="#旋转矩阵转换为变换矩阵" aria-hidden="true">#</a> 旋转矩阵转换为变换矩阵</h4><p>使用函数 <code>stm.r2t</code> 将旋转矩阵转换为变换矩阵</p><ul><li>函数原型 <code>t = stm.r2t(r)</code></li><li>参数 <ul><li><code>r</code> 3 x 3 的旋转矩阵</li></ul></li><li>返回值 对应的 4 x 4 变换矩阵</li></ul><h4 id="变换矩阵转换为旋转矩阵" tabindex="-1"><a class="header-anchor" href="#变换矩阵转换为旋转矩阵" aria-hidden="true">#</a> 变换矩阵转换为旋转矩阵</h4><p>使用函数 <code>stm.t2r</code> 将变换矩阵转换为旋转矩阵</p><ul><li>函数原型 <code>r = stm.t2r(t)</code></li><li>参数 <ul><li><code>t</code> 4 x 4 的变换矩阵</li></ul></li><li>返回值 对应的 3 x 3 旋转矩阵</li></ul><h4 id="由变换矩阵获取欧拉角" tabindex="-1"><a class="header-anchor" href="#由变换矩阵获取欧拉角" aria-hidden="true">#</a> 由变换矩阵获取欧拉角</h4><p>使用函数 <code>stm.tr2eul</code> 获取变换矩阵对应的欧拉角</p><ul><li>函数原型 <code>r = stm.tr2eul(tr, unit)</code></li><li>参数 <ul><li><code>tr</code> 4 x 4 的变换矩阵<br> 用于求解的变换矩阵, 对于旋转矩阵, 可先使用 <code>stm.r2t</code> 转换为变换矩阵</li><li><code>unit</code> 字符串<br> 角度单位, <code>rad</code> 表示弧度制 (默认), <code>deg</code> 表示角度制</li></ul></li><li>返回值 3 元素列表<br> 变换矩阵对应的欧拉角</li><li>注意<br> 通过函数 <code>stm.tr2rpy</code> 可用于获取变换矩阵的方向角, 其余语法同<br> 使用变换矩阵类的成员函数 <code>t.eul(unit) / t.rpy(unit)</code> 也可用于获取欧拉角 / 方位角</li></ul><h4 id="获取变换矩阵的移动量" tabindex="-1"><a class="header-anchor" href="#获取变换矩阵的移动量" aria-hidden="true">#</a> 获取变换矩阵的移动量</h4><p>使用函数 <code>stm.transl</code> 获取变换矩阵相对原点的移动量</p><ul><li>函数原型 <code>v = stm.transl(t)</code></li><li>参数 <ul><li><code>t</code> 变换矩阵</li></ul></li><li>返回值 3 元素列表<br> 一个包含了三个坐标值的列表</li></ul><h3 id="矩阵对象" tabindex="-1"><a class="header-anchor" href="#矩阵对象" aria-hidden="true">#</a> 矩阵对象</h3><p>在使用空间数学库 <code>spatialmath</code> 中有两种变换矩阵形式 <code>SO3</code> 与 <code>SE3</code></p><ul><li><code>SO3</code> 为 3 x 3 的旋转矩阵</li><li><code>SE3</code> 为 4 x 4 的三维物体变换矩阵</li></ul><p>对于以上数学函数的返回值均为一般矩阵, 即 <code>numpy.ndarray</code> 类型 (笔记中默认的矩阵类型)<br> 对于机器人工具箱的返回值与参数均为 <code>SE3</code> / <code>SO3</code></p><p>对于 <code>numpy.ndarray</code> 类型与 <code>SE3</code> / <code>SO3</code> 类型均可以使用 <code>@</code> 作为矩阵乘法运算</p><h4 id="转换为变换矩阵" tabindex="-1"><a class="header-anchor" href="#转换为变换矩阵" aria-hidden="true">#</a> 转换为变换矩阵</h4><p>通过 <code>from spatialmath import SE3, SO3</code> 可导入这两种矩阵的实例</p><p>使用 4 x 4 (3 x 3) 的 numpy 数组可用于实例化 <code>SE3</code> (<code>SO3</code>)</p><h4 id="成员函数" tabindex="-1"><a class="header-anchor" href="#成员函数" aria-hidden="true">#</a> 成员函数</h4><p>对于变换矩阵 <code>se : SE3</code> 有如下常用成员函数</p><ul><li><code>se.t</code> 成员变量, 三元素列表<br> 获取前端坐标, 列表中三个元素分别对应 x, y, z 坐标</li><li><code>se.rpy(unit)</code> 成员函数, 返回三元素列表<br> 获取前端方位角, 列表中三个元素分别对应 x, y, z 角度</li><li><code>se.eul(unit)</code> 成员函数, 返回三元素列表<br> 获取前端欧拉角, 列表中三个元素分别对应 z, y, z 角度</li><li><code>se.A</code> 4 x 4 变换矩阵 (numpy 数组)<br> 获取前端姿态对应的变换矩阵</li></ul><h2 id="串联机械臂操作" tabindex="-1"><a class="header-anchor" href="#串联机械臂操作" aria-hidden="true">#</a> 串联机械臂操作</h2><p>通过串联机械臂对象 <code>SerialLink</code> 的成员函数对机械臂进行操作</p><h3 id="示教" tabindex="-1"><a class="header-anchor" href="#示教" aria-hidden="true">#</a> 示教</h3><h4 id="基本示教" tabindex="-1"><a class="header-anchor" href="#基本示教" aria-hidden="true">#</a> 基本示教</h4><p>使用函数 <code>SL.teach()</code> 对机器人进行示教</p><ul><li>函数原型 <code>SL.teach(q)</code></li><li>参数 <ul><li><code>q</code> n 个元素的列表或 <code>None</code><br> n 为机械臂的关节数, 通过此列表规定机器人的初始位置</li></ul></li></ul><h4 id="机械臂动画" tabindex="-1"><a class="header-anchor" href="#机械臂动画" aria-hidden="true">#</a> 机械臂动画</h4><p>使用函数 <code>env = SL.plot()</code> 展示机器人模型动画</p><ul><li>函数原型 <code>SL.plot(q, dt = 0.05)</code></li><li>参数 <ul><li><code>q</code> m x n 的数组<br> n 为机械臂的关节数, m 为运动的关节坐标数</li><li><code>dt</code> 实数<br> 机器人运动动画的时间间隔</li></ul></li><li>返回值 <ul><li><code>env</code> 绘图环境对象</li></ul></li><li>注意<br> 可通过绘图环境对象获取图像的信息, 对图像进一步操作 <ul><li><code>env.ax</code> 获取图像的 <code>Axes</code> 对象</li><li><code>env.fig</code> 获取图像的 <code>Figure</code> 对象</li><li><code>env.hold()</code> 保持图像 (展示图像结果时使用)</li></ul></li></ul><h4 id="例子-工作空间可视化" tabindex="-1"><a class="header-anchor" href="#例子-工作空间可视化" aria-hidden="true">#</a> 例子 : 工作空间可视化</h4><p>假设有六轴机器人对象 <code>robot</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>env <span class="token operator">=</span> robot<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 绘制 3000 个点</span>
times <span class="token operator">=</span> <span class="token number">3000</span>
res <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span>times<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>times<span class="token punctuation">)</span> <span class="token punctuation">:</span>
    <span class="token comment"># 通过 robot 的成员函数 random_q() 获取一个随机的合法关节坐标</span>
    q <span class="token operator">=</span> robot<span class="token punctuation">.</span>random_q<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 正向求解机械臂前端姿态</span>
    se <span class="token operator">=</span> robot<span class="token punctuation">.</span>fkine<span class="token punctuation">(</span>q<span class="token punctuation">)</span>
    <span class="token comment"># 保存该随机姿态的末端坐标</span>
    res<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> se<span class="token punctuation">.</span>t

res <span class="token operator">=</span> res<span class="token punctuation">.</span>T
<span class="token comment"># 通过绘图环境成员获取 Axes 对象, 并在此对象上继续绘制点云</span>
env<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> res<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># type: ignore</span>
<span class="token comment"># 展示结果</span>
env<span class="token punctuation">.</span>hold<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基本运动学" tabindex="-1"><a class="header-anchor" href="#基本运动学" aria-hidden="true">#</a> 基本运动学</h3><h4 id="正向求解" tabindex="-1"><a class="header-anchor" href="#正向求解" aria-hidden="true">#</a> 正向求解</h4><p>正向求解即给出机械臂各个关节坐标, 求解机械臂最前端相对绝对坐标的状态 (变换矩阵)</p><p>使用函数 <code>se = SL.fkine()</code> 正向求解</p><ul><li>函数原型 <code>se = SL.fkine(q)</code></li><li>参数 <ul><li><code>q</code> n 个元素的列表<br> n 为机械臂的关节数, 机器人的初始位置</li></ul></li><li>返回值<br><code>SE3</code> 类型的变换矩阵</li></ul><h4 id="反向求解" tabindex="-1"><a class="header-anchor" href="#反向求解" aria-hidden="true">#</a> 反向求解</h4><p>反向求解即给出机械臂最前端相对绝对坐标的状态 (变换矩阵), 求解出机械臂的各个关节坐标</p>`,55),O=a("code",null,"SL.ikine_XX()",-1),P=a("code",null,"XX",-1),K=a("code",null,"LM, QP, GN, NR",-1),Q=a("br",null,null,-1),G={href:"https://petercorke.github.io/robotics-toolbox-python/IK/ik.html#ik",target:"_blank",rel:"noopener noreferrer"},J=n('<ul><li>函数原型 <code>iks = SL.ikine_XX(t, mask = [1, 1, 1, 1, 1, 1])</code></li><li>参数 <ul><li><code>t</code> <code>SE3</code> 类型的变换矩阵或 4 x 4 的 <code>numpy.ndarray</code><br> 目标机械臂末端姿态<br> 通常使用时仅规定了机械臂的末端坐标, 此时机器人的前端将朝上 (绝对 z 轴). 因此最好左乘 <code>roty(180, &#39;deg&#39;)</code>, 是机械臂前端朝下</li><li><code>mask</code> 6 元素列表<br> 启用的自由度, 分别表示 x, y, z 方向的平动与旋转 用于欠自由度机器人, 欠自由度机器人需要屏蔽部分无用的自由度才能进行反向求解</li></ul></li><li>返回值 反向求解结果对象 <code>iks</code><ul><li><code>iks.q</code> 反向求解的机械臂关节坐标</li><li><code>iks.success</code> 求解是否成功</li><li><code>iks.residual</code> 求解结果误差</li><li><code>iks.reason</code> 求解失败原因</li></ul></li></ul><h2 id="轨迹规划" tabindex="-1"><a class="header-anchor" href="#轨迹规划" aria-hidden="true">#</a> 轨迹规划</h2><h3 id="时间位移插值" tabindex="-1"><a class="header-anchor" href="#时间位移插值" aria-hidden="true">#</a> 时间位移插值</h3>',3),U=a("p",null,[s("即确定位移关于时间的函数 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"x"),a("mo",null,"="),a("mi",null,"f"),a("mo",{stretchy:"false"},"("),a("mi",null,"t"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"x=f(t)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"x"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mclose"},")")])])]),a("br"),s(" 通过合理的规划, 避免物体的速度与加速度出现突变, 防止冲击")],-1),W=n('<h4 id="五次多项式轨迹插值" tabindex="-1"><a class="header-anchor" href="#五次多项式轨迹插值" aria-hidden="true">#</a> 五次多项式轨迹插值</h4><p>使用五次多项式的形式规划轨迹, 同时要求初末位置的加速度与速度为 0</p><ul><li>函数原型 <code>traj = rtb.quintic(q0, qt, t)</code></li><li>参数 <ul><li><code>q0, qt</code> 实数<br> 初始与末尾的位移</li><li><code>t</code> 整数<br> 采样点数 (移动时间)</li></ul></li><li>返回值 轨迹对象 <code>traj</code><ul><li><code>traj.q/qd/qdd</code> t 元素数组, 各个时间间隔下的位置, 速度, 加速度</li><li><code>traj.plot()</code> 绘制出轨迹的位移, 速度, 加速度图像</li></ul></li></ul><h4 id="五次多项式轨迹函数" tabindex="-1"><a class="header-anchor" href="#五次多项式轨迹函数" aria-hidden="true">#</a> 五次多项式轨迹函数</h4><p>同<a href="#%E4%BA%94%E6%AC%A1%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%BD%A8%E8%BF%B9">五次多项式轨迹</a>, 但将返回一个可调用对象 (函数)</p><ul><li>函数原型 <code>func = rtb.quintic_func(q0, qt, T)</code></li><li>参数 <ul><li><code>q0, qt</code> 实数<br> 初始与末尾的位移</li><li><code>T</code> 实数<br> 移动时间</li></ul></li><li>返回值 可调用对象 <code>func(T)</code><br> 通过给出时间, 将返回一个三元素元组, 分别是此时的位置, 速度, 加速度</li></ul><h4 id="梯形速度轨迹插值" tabindex="-1"><a class="header-anchor" href="#梯形速度轨迹插值" aria-hidden="true">#</a> 梯形速度轨迹插值</h4><p>使用梯形速度的形式规划轨迹, 可以保证机器人尽量在最大速度运行, 但加速度存在突变</p><ul><li>函数原型 <code>traj = rtb.trapezoidal(q0, qt, t, V)</code></li><li>参数 <ul><li><code>q0, qt</code> 实数<br> 初始与末尾的位移</li><li><code>t</code> 实数<br> 移动时间</li><li><code>V</code> 实数<br> 最大速度</li></ul></li><li>返回值 轨迹对象 <code>traj</code></li><li>注意<br> 梯形速度轨迹也有函数版本 <code>traj = rtb.trapezoidal_func(q0, qt, t, V)</code>, 使用方法与<a href="#%E4%BA%94%E6%AC%A1%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%BD%A8%E8%BF%B9%E5%87%BD%E6%95%B0">五次多项式轨迹函数</a>类似</li></ul><h4 id="多维轨迹插值" tabindex="-1"><a class="header-anchor" href="#多维轨迹插值" aria-hidden="true">#</a> 多维轨迹插值</h4><p>对多维位移同时进行插值, 实现点到点的路线规划</p><ul><li>函数原型 <code>traj = rtb.mtraj(tfunc, q0, qf, t)</code></li><li>参数 <ul><li><code>tfunc</code> 可调用对象<br> 插值策略, 通常使用 <code>rtb.quintic</code> 或 <code>rtb.trapezoidal</code></li><li><code>q0, qf</code> n 元素列表<br> 起始坐标与终点坐标</li><li><code>t</code> 整数<br> 采样点数 (规划时间)</li></ul></li><li>返回值 轨迹对象 <code>traj</code><br> 此时轨迹 <code>traj.q</code> 为一个 n x t 的数组</li></ul><h4 id="多段轨迹插值" tabindex="-1"><a class="header-anchor" href="#多段轨迹插值" aria-hidden="true">#</a> 多段轨迹插值</h4><p>对多维位移同时移动, 并且带有一定速度经过多个点的路线规划</p><ul><li>函数原型 <code>traj = rtb.mstraj(viapoints, dt, tacc)</code></li><li>参数 <ul><li><code>viaplot</code> n x m 数组<br> 由经过点组成的数组, n 为控制维度, m 为经过点个数 (按行排列经过点)</li><li><code>dt</code> 实数<br> 时间间隔</li><li><code>tacc</code> 实数<br> 最大加速度</li></ul></li><li>返回值 轨迹对象 <code>traj</code></li></ul><h4 id="姿态插值" tabindex="-1"><a class="header-anchor" href="#姿态插值" aria-hidden="true">#</a> 姿态插值</h4><p>除了对坐标插值, 还可直接对变换矩阵 (姿态) 插值</p>',17),Y=a("ul",null,[a("li",null,[s("函数原型 "),a("code",null,"t_arr = rtb.ctraj(T0, T1, s = s)")]),a("li",null,[s("参数 "),a("ul",null,[a("li",null,[a("code",null,"T0"),s(" 4 x 4 变换矩阵 ("),a("code",null,"SE3"),s(" 类型)"),a("br"),s(" 起点姿态")]),a("li",null,[a("code",null,"T1"),s(" 4 x 4 变换矩阵 ("),a("code",null,"SE3"),s(" 类型)"),a("br"),s(" 终点姿态")]),a("li",null,[a("code",null,"s"),s(" n 元素数组 各时刻的采样位置 (使用百分比表示位置, 即 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mo",{stretchy:"false"},"["),a("mn",null,"0"),a("mo",{separator:"true"},","),a("mn",null,"1"),a("mo",{stretchy:"false"},"]")]),a("annotation",{encoding:"application/x-tex"},"[0, 1]")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mopen"},"["),a("span",{class:"mord"},"0"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord"},"1"),a("span",{class:"mclose"},"]")])])]),s(" 内的值表示)"),a("br"),a("code",null,"s"),s(" 可通过"),a("a",{href:"#%E4%BA%94%E6%AC%A1%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%BD%A8%E8%BF%B9%E6%8F%92%E5%80%BC"},"五次多项式轨迹插值"),s("或"),a("a",{href:"#%E6%A2%AF%E5%BD%A2%E9%80%9F%E5%BA%A6%E8%BD%A8%E8%BF%B9%E6%8F%92%E5%80%BC"},"梯形速度轨迹插值"),s("生成, 以实现较好的轨迹规划"),a("br"),s(" 即使用 "),a("code",null,"s = rtb.quintic(0, 1, time).q"),s(" (注意使用成员 "),a("code",null,"q"),s(" 导出轨迹对应的数组)")])])]),a("li",null,"返回值 n 元素的变换矩阵数组")],-1),Z=n(`<h3 id="轨迹规划思路" tabindex="-1"><a class="header-anchor" href="#轨迹规划思路" aria-hidden="true">#</a> 轨迹规划思路</h3><h4 id="关节插值-点到点轨迹" tabindex="-1"><a class="header-anchor" href="#关节插值-点到点轨迹" aria-hidden="true">#</a> 关节插值 - 点到点轨迹</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 根据初末位置的姿态求出对应的变换矩阵</span>
T0 <span class="token operator">=</span> stm<span class="token punctuation">.</span>transl<span class="token punctuation">(</span>x0<span class="token punctuation">,</span> y0<span class="token punctuation">,</span> z0<span class="token punctuation">)</span> @ stm<span class="token punctuation">.</span>rpy2tr<span class="token punctuation">(</span>rz0<span class="token punctuation">,</span> ry0 <span class="token punctuation">,</span>rx0<span class="token punctuation">)</span>
T1 <span class="token operator">=</span> stm<span class="token punctuation">.</span>transl<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> z1<span class="token punctuation">)</span> @ stm<span class="token punctuation">.</span>rpy2tr<span class="token punctuation">(</span>rz1<span class="token punctuation">,</span> ry1 <span class="token punctuation">,</span>rx1<span class="token punctuation">)</span>

<span class="token comment"># 直接求出初末位置关节坐标</span>
q0 <span class="token operator">=</span> s<span class="token punctuation">.</span>ikine_XX<span class="token punctuation">(</span>T0<span class="token punctuation">)</span>
q1 <span class="token operator">=</span> s<span class="token punctuation">.</span>ikine_XX<span class="token punctuation">(</span>T1<span class="token punctuation">)</span>

<span class="token comment"># 通过对初末位置的插值得到轨迹</span>
Qs <span class="token operator">=</span> rtb<span class="token punctuation">.</span>mtraj<span class="token punctuation">(</span>rtb<span class="token punctuation">.</span>quintic<span class="token punctuation">,</span> q0<span class="token punctuation">.</span>q<span class="token punctuation">,</span> q1<span class="token punctuation">.</span>q<span class="token punctuation">,</span> time<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>关节插值能保证轨迹一定连续且运动不会跳变, 运算量小</li><li>通常无法得到直线轨迹</li></ul><h4 id="坐标插值-直线轨迹" tabindex="-1"><a class="header-anchor" href="#坐标插值-直线轨迹" aria-hidden="true">#</a> 坐标插值 - 直线轨迹</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 首先对坐标插值 (使用六元素数组 P0/1 保存姿态信息)</span>
traj <span class="token operator">=</span> rtb<span class="token punctuation">.</span>mtraj<span class="token punctuation">(</span>rtb<span class="token punctuation">.</span>quintic<span class="token punctuation">,</span> P0<span class="token punctuation">,</span> P1<span class="token punctuation">,</span> time<span class="token punctuation">)</span>

<span class="token comment"># 求解出各个姿态下对应的变换矩阵</span>
Ts <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span>time<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span> <span class="token punctuation">:</span>
    tr <span class="token operator">=</span> stm<span class="token punctuation">.</span>transl<span class="token punctuation">(</span>traj<span class="token punctuation">.</span>q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> traj<span class="token punctuation">.</span>q<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> traj<span class="token punctuation">.</span>q<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> @ stm<span class="token punctuation">.</span>rpy2tr<span class="token punctuation">(</span>traj<span class="token punctuation">.</span>q<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> traj<span class="token punctuation">.</span>q<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">,</span>traj<span class="token punctuation">.</span>q<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    Ts<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> tr

<span class="token comment"># 求解各个姿态下的变换矩阵</span>
Qs <span class="token operator">=</span> s<span class="token punctuation">.</span>ikine_XX<span class="token punctuation">(</span>Ts<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),$=a("ul",null,[a("li",null,"可以保证直线轨迹, 但可能存在跳变或求解失败"),a("li",null,[s("到达目标角度时可以有两个不同的旋转方向, 需要具体确认 (可对目标角度 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mo",null,"±"),a("mn",null,"360")]),a("annotation",{encoding:"application/x-tex"},"\\pm 360")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),a("span",{class:"mord"},"±"),a("span",{class:"mord"},"360")])])]),s(" 进行改变)")])],-1),aa=n(`<h4 id="变换矩阵插值-直线轨迹" tabindex="-1"><a class="header-anchor" href="#变换矩阵插值-直线轨迹" aria-hidden="true">#</a> 变换矩阵插值 - 直线轨迹</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 根据初末位置的姿态求出对应的变换矩阵</span>
T0 <span class="token operator">=</span> SE3<span class="token punctuation">(</span>stm<span class="token punctuation">.</span>transl<span class="token punctuation">(</span>x0<span class="token punctuation">,</span> y0<span class="token punctuation">,</span> z0<span class="token punctuation">)</span> @ stm<span class="token punctuation">.</span>rpy2tr<span class="token punctuation">(</span>rz0<span class="token punctuation">,</span> ry0 <span class="token punctuation">,</span>rx0<span class="token punctuation">)</span><span class="token punctuation">)</span>
T1 <span class="token operator">=</span> SE3<span class="token punctuation">(</span>stm<span class="token punctuation">.</span>transl<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> z1<span class="token punctuation">)</span> @ stm<span class="token punctuation">.</span>rpy2tr<span class="token punctuation">(</span>rz1<span class="token punctuation">,</span> ry1 <span class="token punctuation">,</span>rx1<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 对变换矩阵进行插值</span>
Ts <span class="token operator">=</span> rtb<span class="token punctuation">.</span>ctraj<span class="token punctuation">(</span>T0<span class="token punctuation">,</span> T1<span class="token punctuation">,</span> s <span class="token operator">=</span> rtb<span class="token punctuation">.</span>quintic<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">.</span>q<span class="token punctuation">)</span>

<span class="token comment"># 求解各个姿态下的变换矩阵</span>
Qs <span class="token operator">=</span> s<span class="token punctuation">.</span>ikine_XX<span class="token punctuation">(</span>Ts<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可以保证直线轨迹, 但可能存在跳变或求解失败</li></ul><h4 id="多点轨迹规划" tabindex="-1"><a class="header-anchor" href="#多点轨迹规划" aria-hidden="true">#</a> 多点轨迹规划</h4>`,4);function sa(na,ta){const t=p("ExternalLinkIcon");return c(),i("div",null,[r,u,m,a("p",null,[s("通过 "),d,s(" 安装"),h,s(" 参考文档 "),a("a",k,[s("https://petercorke.github.io/robotics-toolbox-python/intro.html"),e(t)])]),b,g,x,y,v,w,_,f,M,z,L,E,q,A,B,S,R,j,T,F,a("p",null,[s("因此将矩阵扩展到 "),D,s(", 将扩展的部分用于保存物体的位置变换信息, 成为变换矩阵"),X,s(" 参考资料 "),a("a",I,[s("https://zhuanlan.zhihu.com/p/356878461"),e(t)])]),N,C,V,H,a("p",null,[s("使用函数 "),O,s(" 正向求解, 其中 "),P,s(" 为求解器, 可以是 "),K,s(" 区别见文档"),Q,a("a",G,[s("https://petercorke.github.io/robotics-toolbox-python/IK/ik.html#ik"),e(t)])]),J,U,W,Y,Z,$,aa])}const pa=l(o,[["render",sa],["__file","rtb.html.vue"]]);export{pa as default};
