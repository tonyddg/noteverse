import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as r,b as t,d as e,a as l,w as h,e as a}from"./app-8c5ce49e.js";const n={},s=a('<h1 id="笔记规范" tabindex="-1"><a class="header-anchor" href="#笔记规范" aria-hidden="true">#</a> 笔记规范</h1><h2 id="文档规范" tabindex="-1"><a class="header-anchor" href="#文档规范" aria-hidden="true">#</a> 文档规范</h2><h3 id="文档目录" tabindex="-1"><a class="header-anchor" href="#文档目录" aria-hidden="true">#</a> 文档目录</h3><p>每个文件夹内必须有 <code>README.md</code> 文件, 并且必须包含以下内容</p><ol><li>使用 <code>index: false</code> 的 frontmatter 防止被索引包含</li><li>使用一级标题表示的目录标题 (也可使用 frontmatter 中的 <code>text</code> 属性)</li><li>使用 <code>&gt;</code> 对目录下笔记来源进行说明</li><li>使用 <code>&lt;AutoCatalog/&gt;</code> 组件生成自动目录</li></ol><h3 id="文档内容" tabindex="-1"><a class="header-anchor" href="#文档内容" aria-hidden="true">#</a> 文档内容</h3><ol><li>最好使用 frontmatter 的 <code>order</code> 属性确定索引顺序</li><li>一个文档内最好只包含一个一级标题, 并以此标题作为文档名, 否则应使用 <code>title</code> 确定标题, 并且在 frontmatter 下使用 <code>---</code>, 避免标题错误显示的 bug</li><li>文档没有 Latex 格式错误与其他错误显示</li><li>使用文档下的 src 文件夹保存图片素材, 对于自己绘制的素材, 最好使用 <code>.drawio.svg</code> 格式</li><li>为了分类素材, 可在 src 文件夹中, 根据笔记名称建立同名的子文件夹</li><li>文档链接优先使用 <code>#</code>, 避免使用 <code>&lt;div&gt;</code></li><li>尽量保证图片显示 <code>![]()</code> 位于独立的一行中</li><li>最好在图片的 <code>[]</code> 内填入图片描述</li><li>当图片的大小过大时, 使用 <code>![](... =x400)</code> 限制其高度, 保证更好的阅读体验; 多层图片则使其总高度不超过 400px</li></ol><h3 id="杂项" tabindex="-1"><a class="header-anchor" href="#杂项" aria-hidden="true">#</a> 杂项</h3><ol><li>对于一般的锚点, 可使用 <code>[空行]{#[锚点名] .block_anchor}</code> 设置, 通常放在需要锚点的块级元素上一行, 其中 <code>block_anchor</code> 定义于 <code>.vuepress/styles/config.scss</code></li></ol><h2 id="代码规范" tabindex="-1"><a class="header-anchor" href="#代码规范" aria-hidden="true">#</a> 代码规范</h2><h3 id="基本" tabindex="-1"><a class="header-anchor" href="#基本" aria-hidden="true">#</a> 基本</h3>',11),f=a('<h3 id="文档表示" tabindex="-1"><a class="header-anchor" href="#文档表示" aria-hidden="true">#</a> 文档表示</h3><ul><li>对于代码块, 使用 ``` 包裹, 并写入正确的代码类型, 对于 C++, 类型为 cpp</li><li>对于行内代码, 使用 ` 包裹, 对于语法结构, 可选参数值均采用此方式包裹, 如 <code>${}</code>, <code>SEND_ERROR</code></li><li>保证行内代码使用到 &lt;&gt; 时, 使用 \\ 转义</li></ul><h2 id="公式规范" tabindex="-1"><a class="header-anchor" href="#公式规范" aria-hidden="true">#</a> 公式规范</h2>',3);function u(_,x){const d=c("RouterLink");return i(),r("div",null,[s,t("p",null,[e("参考"),l(d,{to:"/coding/random/standard.html"},{default:h(()=>[e("此文档")]),_:1}),e("的要求")]),f])}const b=o(n,[["render",u],["__file","standard.html.vue"]]);export{b as default};
