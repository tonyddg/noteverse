import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as r,c as o,b as a,d as s,a as l,e}from"./app-8c5ce49e.js";const c={},p=e('<h1 id="matlab-基本语法" tabindex="-1"><a class="header-anchor" href="#matlab-基本语法" aria-hidden="true">#</a> Matlab 基本语法</h1><h2 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字" aria-hidden="true">#</a> 关键字</h2><ol><li>ans 表达式结果</li><li>1i, 1j 复数单位</li><li>inf 无穷大</li><li>eps 无穷小</li><li>NaN 未定义/非数字</li><li>pi 圆周率</li></ol><h2 id="控制台命令" tabindex="-1"><a class="header-anchor" href="#控制台命令" aria-hidden="true">#</a> 控制台命令</h2>',4),h={href:"https://ww2.mathworks.cn/help/matlab/entering-commands.html?s_tid=CRUX_lftnav",target:"_blank",rel:"noopener noreferrer"},d=e('<ol><li>iskeyword 获取所有关键字</li><li>clear [arg] 清除变量, 无参数则为所有变量</li><li>format [rat/short/long] 设置显示格式 <ol><li>rat 显示为分数</li><li>short 显示 5 位有效数字</li><li>long 完整显示</li><li>[short/long]E 科学计数法</li></ol></li><li>clc 清屏</li><li>whos [arg] 显示变量信息, 无参数则为显示所有变量</li><li>tic toc 计算 tic 至 toc 代码块所用时间</li><li>在命令结尾加上分号将不会显示结果</li><li>CTRL + C 终止脚本</li><li>... + 回车 在下一行继续输入命令</li></ol><h2 id="矩阵" tabindex="-1"><a class="header-anchor" href="#矩阵" aria-hidden="true">#</a> 矩阵</h2><ol><li>横向为行(row) 纵向为列(column)</li><li>matlab 中, <mark>行优先于列</mark>, 先确定行再确定列</li><li>因此矩阵遍历方向为<mark>先从上到下</mark>, 再从左到右</li><li>matlab <mark>矩阵中从 1 开始记</mark></li><li>通常以列区分数据组, 即第 n 列为第 n 组数据</li></ol><h3 id="矩阵表示" tabindex="-1"><a class="header-anchor" href="#矩阵表示" aria-hidden="true">#</a> 矩阵表示</h3>',4),m={href:"https://ww2.mathworks.cn/help/matlab/math/creating-and-concatenating-matrices.html",target:"_blank",rel:"noopener noreferrer"},u=a("ol",null,[a("li",null,"使用 逗号, 或 空格 表示同一行, 不同列中的元素"),a("li",null,"使用 分号; 区分行, 表示下一行"),a("li",null,"使用 方括号[] 包裹矩阵"),a("li",null,"等差数列 A = 首项:公差:末项 包含首项与末项(不需要方括号)")],-1),g=a("h3",{id:"矩阵读取",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#矩阵读取","aria-hidden":"true"},"#"),s(" 矩阵读取")],-1),b={href:"https://ww2.mathworks.cn/help/matlab/math/array-indexing.html",target:"_blank",rel:"noopener noreferrer"},v=a("ol",null,[a("li",null,"使用 圆括号() 实现对矩阵的读取操作"),a("li",null,"M(a) 按先从上到下, 再从左到右的顺序, 获取矩阵中第 a 个元素"),a("li",null,"M(r, c) 获取第 r 行(纵向), 第 c 列(横向)的元素"),a("li",null,"M(:, c)/(r, : ) 获取整列/整行"),a("li",null,[s("M(矩阵 N) 将矩阵 N 中的元素 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msub",null,[a("mi",null,"n"),a("mrow",null,[a("mi",null,"i"),a("mi",null,"j")])])]),a("annotation",{encoding:"application/x-tex"},"n_{ij}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7167em","vertical-align":"-0.2861em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"n"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3117em"}},[a("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05724em"}},"ij")])])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.2861em"}},[a("span")])])])])])])])]),s(" 替换为 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"M"),a("mo",{stretchy:"false"},"("),a("msub",null,[a("mi",null,"n"),a("mrow",null,[a("mi",null,"i"),a("mi",null,"j")])]),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"M(n_{ij})")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1.0361em","vertical-align":"-0.2861em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),a("span",{class:"mopen"},"("),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"n"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3117em"}},[a("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05724em"}},"ij")])])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.2861em"}},[a("span")])])])])]),a("span",{class:"mclose"},")")])])])]),a("li",null,[s("M("),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"v"),a("mi",null,"r")]),a("annotation",{encoding:"application/x-tex"},"vr")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r")])])]),s(", "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"v"),a("mi",null,"c")]),a("annotation",{encoding:"application/x-tex"},"vc")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mord mathnormal"},"c")])])]),s(") 取 M 中的 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"v"),a("msub",null,[a("mi",null,"r"),a("mn",null,"1")]),a("mo",{separator:"true"},","),a("mi",{mathvariant:"normal"},"."),a("mi",{mathvariant:"normal"},"."),a("mi",{mathvariant:"normal"},"."),a("mo",{separator:"true"},","),a("mi",null,"v"),a("msub",null,[a("mi",null,"r"),a("mi",null,"m")])]),a("annotation",{encoding:"application/x-tex"},"vr_1,...,vr_m")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3011em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"1")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord"},"..."),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight"},"m")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])])]),s(" 行, 与 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"v"),a("msub",null,[a("mi",null,"c"),a("mn",null,"1")]),a("mo",{separator:"true"},","),a("mi",{mathvariant:"normal"},"."),a("mi",{mathvariant:"normal"},"."),a("mi",{mathvariant:"normal"},"."),a("mo",{separator:"true"},","),a("mi",null,"v"),a("msub",null,[a("mi",null,"c"),a("mi",null,"n")])]),a("annotation",{encoding:"application/x-tex"},"vc_1,...,vc_n")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"c"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3011em"}},[a("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"1")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord"},"..."),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"c"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight"},"n")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])])]),s(" 列组成一个新的 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mo",null,"×"),a("mi",null,"n")]),a("annotation",{encoding:"application/x-tex"},"m\\times n")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),a("span",{class:"mord mathnormal"},"m"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"×"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"n")])])]),s(" 矩阵")]),a("li",null,"M(logic) logic 为一个布尔型的矩阵, 取出 M 中 logic 为 1 位置的值, 构成一个向量(数组) 此方法用于与比较运算配合")],-1),k=a("h3",{id:"扩展矩阵",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#扩展矩阵","aria-hidden":"true"},"#"),s(" 扩展矩阵")],-1),x=a("p",null,"文档见矩阵构建",-1),f=a("ol",null,[a("li",null,"为矩阵中不存在的位置赋值, 将自动扩展矩阵, 为定义的位置则取 0"),a("li",null,"[A B] 以行方向合并矩阵 A, B, 要求 A, B 行数相同"),a("li",null,"[A ; B] 以列方向合并矩阵 A, B, 要求 A, B 列数相同")],-1),_=a("h3",{id:"多维矩阵",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#多维矩阵","aria-hidden":"true"},"#"),s(" 多维矩阵")],-1),w={href:"https://ww2.mathworks.cn/help/matlab/math/multidimensional-arrays.html",target:"_blank",rel:"noopener noreferrer"},y=a("h3",{id:"矩阵运算",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#矩阵运算","aria-hidden":"true"},"#"),s(" 矩阵运算")],-1),M={href:"https://ww2.mathworks.cn/help/matlab/matlab_prog/matlab-operators-and-special-characters.html",target:"_blank",rel:"noopener noreferrer"},z=a("ol",null,[a("li",null,"基本运算符 +, -, *, / 默认使用矩阵运算规则"),a("li",null,"指数运算 ^ , 指数函数使用 exp()"),a("li",null,"对应运算 . + [基本运算符], 矩阵 A 与 B 的对应元素分别运算"),a("li",null,"转置 .'"),a("li",null,"复共轭转置 '"),a("li",null,"求余 mod(a, b) 不支持 % 求余"),a("li",null,"浮点求余 rem(a, b)")],-1),A=a("h3",{id:"矩阵创建",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#矩阵创建","aria-hidden":"true"},"#"),s(" 矩阵创建")],-1),B={href:"https://ww2.mathworks.cn/help/matlab/matrices-and-arrays.html",target:"_blank",rel:"noopener noreferrer"},L=a("ol",null,[a("li",null,"zeros(r, c) 创建全零矩阵, 可用于函数初始化"),a("li",null,"rand(r, c) 创建均匀分布的随机矩阵"),a("li",null,[s("magic(r) 创建 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"r"),a("mo",null,"×"),a("mi",null,"r")]),a("annotation",{encoding:"application/x-tex"},"r\\times r")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"×"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r")])])]),s(" 的幻方矩阵")]),a("li",null,"[首项:公差:末项] 创建等差数列"),a("li",null,"logspace 创建指数数列")],-1),q=e('<h3 id="矩阵测量" tabindex="-1"><a class="header-anchor" href="#矩阵测量" aria-hidden="true">#</a> 矩阵测量</h3><ol><li>max/min(A) 将返回各列的最大/小值</li><li>sum/mean(A) 将返回各列的和/平均 若要求row时可先转置矩阵</li><li>sort(A) 将各列升序排序</li><li>sortrows(A) 以第一列为依据升序排序，排序同时, 第一列中元素的交换会影响其他行</li><li>size(A, dim) 返回矩阵大小, 参数为第 dim 个维度, 如果无参数则返回一个数组, 表示各个维度的大小</li><li>length(A) 返回矩阵最大维度的长度</li><li>find(logic) 返回 logic 中为 1 的元素的索引(返回单参数, 数组形式)</li><li>iscolumn(M) 确定矩阵是否是列向量</li></ol><h3 id="逻辑运算" tabindex="-1"><a class="header-anchor" href="#逻辑运算" aria-hidden="true">#</a> 逻辑运算</h3>',3),j={href:"https://ww2.mathworks.cn/help/matlab/logical-operations.html?s_tid=CRUX_lftnav",target:"_blank",rel:"noopener noreferrer"},N=e('<ol><li>比较大小 &gt; &gt;= &lt; &lt;=</li><li>不等关系 ~=</li><li>等于关系 ==</li><li>逻辑运算 &amp; | ~</li><li>具有短路功能的逻辑运算 &amp;&amp; ||</li><li>矩阵的逻辑运算结果为布尔矩阵, 即矩阵中满足结果的元素为 1, 否则为 0</li></ol><h4 id="布尔矩阵应用示例" tabindex="-1"><a class="header-anchor" href="#布尔矩阵应用示例" aria-hidden="true">#</a> 布尔矩阵应用示例</h4><ol><li>find(A == a) 获取 A 中所有等于 a 的元素的索引</li><li>A(B &gt; a) 根据 B 中大于 a 的元素的索引取 A 中的值</li></ol><h3 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h3><ol><li>双引号 &quot;&quot; 表示字符串类 string</li><li>单引号 &#39;&#39; 表示 char 型数组</li><li>string 需要使用专门的函数操控, 不能当作数组合并</li><li>char 数组可以视为数组使用, 通过 [&#39;abc&#39; &#39;def&#39;] 合并</li><li>在字符串中 &quot; 号以 &quot;&quot; 代替</li></ol><h3 id="基本数学函数" tabindex="-1"><a class="header-anchor" href="#基本数学函数" aria-hidden="true">#</a> 基本数学函数</h3><ol><li>log 自然对数函数</li><li>exp 以 e 为底的指数函数(e 不是常量)</li></ol><h2 id="程序控制" tabindex="-1"><a class="header-anchor" href="#程序控制" aria-hidden="true">#</a> 程序控制</h2><h3 id="控制流" tabindex="-1"><a class="header-anchor" href="#控制流" aria-hidden="true">#</a> 控制流</h3>',9),X={href:"https://ww2.mathworks.cn/help/matlab/control-flow.html?s_tid=CRUX_lftnav",target:"_blank",rel:"noopener noreferrer"},C=e(`<h4 id="if" tabindex="-1"><a class="header-anchor" href="#if" aria-hidden="true">#</a> if</h4><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token keyword">if</span> expression
    statements
<span class="token keyword">elseif</span> expression
    statements
<span class="token keyword">else</span>
    statements
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>expression 不需要括号</p><h4 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for</h4><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token keyword">for</span> index <span class="token operator">=</span> values
   statements
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>values 为一个数组, 可通过 首项:公差:末项 语法创建</p><h4 id="while" tabindex="-1"><a class="header-anchor" href="#while" aria-hidden="true">#</a> while</h4><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token keyword">while</span> expression
    statements
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> switch</h4><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token keyword">switch</span> switch_expression
   <span class="token keyword">case</span> case_expression
      statements
   <span class="token keyword">case</span> case_expression
      statements
    <span class="token punctuation">...</span>
   <span class="token keyword">otherwise</span>
      statements
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="脚本" tabindex="-1"><a class="header-anchor" href="#脚本" aria-hidden="true">#</a> 脚本</h3>`,11),T={href:"https://ww2.mathworks.cn/help/matlab/scripts.html",target:"_blank",rel:"noopener noreferrer"},E=e('<ol><li>%注释符号 也可以选中注释区域再点击注释区的按钮(或右键菜单)添加或解除注释</li><li>%%指定区块(%%开始 空行结尾) 指定后可以使用运行节功能只执行选中的区块</li><li>点击编辑器侧边的行数可以设置断点 运行到断点时会停止运行进入命令行并且可以查看工作区的变量，点击编辑器的继续可以继续</li><li>选中代码再点击缩进区的按钮(或右键菜单)进行缩进或规范格式</li><li>运行脚本后变量将被保留，为了避免错误，在写脚本时注意clear或重新赋值</li><li>脚本中需要加 分号; 表示新一行代码</li><li>使用函数 publish 导出脚本结果</li><li>脚本使用 disp() 输出结果, 字符串参数使用单引号 &#39;</li></ol><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h3>',2),R={href:"https://ww2.mathworks.cn/help/matlab/functions.html",target:"_blank",rel:"noopener noreferrer"},U=e(`<ol><li>基本格式</li></ol><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token keyword">function</span> <span class="token punctuation">[</span>val1<span class="token punctuation">,</span> val2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fun</span><span class="token punctuation">(</span>arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">)</span>
    <span class="token punctuation">...</span>
    val1 <span class="token operator">=</span> <span class="token punctuation">...</span><span class="token punctuation">;</span>
    val2 <span class="token operator">=</span> <span class="token punctuation">...</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>无返回值时, 返回值设为 []</li><li>函数名必须与文件名相同</li><li>没有默认参数, 使用内部变量 nargin 获取函数的参数个数</li><li>可以在脚本末尾定义子函数, 只能在脚本中使用</li><li>在函数中定义的子函数不能与函数同名</li></ol><h4 id="函数规范" tabindex="-1"><a class="header-anchor" href="#函数规范" aria-hidden="true">#</a> 函数规范</h4><ol><li>通常以列区分数据组, 即第 n 列为第 n 组数据, 当数据不规范时, 注意使用 iscolumn 判断, 并先转置</li><li>对于多列数据则对各列分别计算</li></ol><h4 id="函数返回值处理" tabindex="-1"><a class="header-anchor" href="#函数返回值处理" aria-hidden="true">#</a> 函数返回值处理</h4><p>matlab 函数通常有多个返回值, 将以行矩阵的形式返回, 可通过 [val1, val2, ...] = fun(...), 将返回值赋给变量 val1, val2, ...</p><p>对于不需要的返回值, 则使用 <code>~</code> 占位</p><h4 id="函数句柄" tabindex="-1"><a class="header-anchor" href="#函数句柄" aria-hidden="true">#</a> 函数句柄</h4><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code>fun <span class="token operator">=</span> <span class="token operator">@</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> 函数体
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以此方法将函数作为参数传递, 可用于数值微积分等</p><h3 id="数据处理" tabindex="-1"><a class="header-anchor" href="#数据处理" aria-hidden="true">#</a> 数据处理</h3>`,12),V={href:"https://ww2.mathworks.cn/help/matlab/data-import-and-export.html",target:"_blank",rel:"noopener noreferrer"},Y=e(`<ol><li>load 加载 .mat 数据</li><li>save 保存工作区中的数据为 .mat, 加上 -ascii 使保存结果可用 TXT 等方式直接读取, 当数据将丢失</li><li>图片, 视频等数据见文档</li></ol><h2 id="技巧" tabindex="-1"><a class="header-anchor" href="#技巧" aria-hidden="true">#</a> 技巧</h2><h3 id="计算数量级" tabindex="-1"><a class="header-anchor" href="#计算数量级" aria-hidden="true">#</a> 计算数量级</h3><p>使用 log10 快速确定一个数的数量级</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code>res <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token function">log10</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="图像绘制" tabindex="-1"><a class="header-anchor" href="#图像绘制" aria-hidden="true">#</a> 图像绘制</h1><h2 id="注释与格式" tabindex="-1"><a class="header-anchor" href="#注释与格式" aria-hidden="true">#</a> 注释与格式</h2>`,7),I={href:"https://ww2.mathworks.cn/help/matlab/formatting-and-annotation.html",target:"_blank",rel:"noopener noreferrer"},$=e(`<ol><li>注释函数的参数设置方法 fun(..., &#39;Property&#39;, Args) 使用字符串表示属性名, 后接属性参数, 从而实现设置字体大小等效果</li><li>注释格式设置见文档, 默认可以使用 LaTex</li></ol><h3 id="图像注释" tabindex="-1"><a class="header-anchor" href="#图像注释" aria-hidden="true">#</a> 图像注释</h3><ol><li>title 添加标题</li><li>subtitle 为绘图添加副标题</li><li>sgtitle 在子图网格上添加标题(用于 subplot)</li><li>mlabel 为 m 轴添加标签</li><li>legend 在坐标区上添加图例说明(顺序与定义图像的顺序相同)</li><li>text 在指定点位置添加文字 <ul><li>指定参数 Units 为 <code>normalized</code> 时, 使用 0 - 1 的相对坐标, 否则默认为实际坐标</li><li>指定参数 Interpreter 为 <code>latex</code> 时, 可以使用 Latex (此时字符串内不可有中文, 使用 <code>$$</code> 包裹转以部分)</li><li>文字可通过函数 <code>sprintf</code> 格式化</li></ul></li></ol><p>为 <code>for</code> 循环生成的图像批量添加 legend 的技巧</p><ol><li>使用一个字符串数组保存各个图像的 legend, 其中字符串数组通过函数 <code>string</code> 创建, 如 <code>legend_list = string(n);</code></li><li>在每个循环中保存曲线的名称, 其中引号得到的是字符数组, 因此还用将字符数组传入函数 <code>string</code>, 使其变为字符串对象 <code>legend_list(it)=string(&#39;line&#39;+it)</code></li><li>最后将字符串数组传入 <code>legend</code> 函数完成注释 <code>legend(legend_list)</code></li></ol><p>示例</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code>omega_n_list <span class="token operator">=</span> <span class="token number">0.2</span><span class="token operator">:</span><span class="token number">0.2</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">;</span>
xi <span class="token operator">=</span> <span class="token number">0.707</span><span class="token punctuation">;</span>
legend_list <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>omega_n_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%1</span>

figure
hold on

it <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> omega_n <span class="token operator">=</span> omega_n_list
    sys <span class="token operator">=</span> <span class="token function">tf</span><span class="token punctuation">(</span>omega_n<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token operator">*</span> xi <span class="token operator">*</span> omega_n<span class="token punctuation">,</span> omega_n<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">bode</span><span class="token punctuation">(</span>sys<span class="token punctuation">)</span>

    <span class="token function">legend_list</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>&quot;<span class="token operator">\\</span>omega_n<span class="token operator">=</span>&quot; <span class="token operator">+</span> omega_n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%2</span>
    it <span class="token operator">=</span> it <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token function">legend</span><span class="token punctuation">(</span>legend_list<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%3</span>

hold off
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图像标记" tabindex="-1"><a class="header-anchor" href="#图像标记" aria-hidden="true">#</a> 图像标记</h3><ol><li>xline 绘制具有常量 x 值的垂直线</li><li>yline 绘制具有常量 y 值的水平线</li><li>datatip(g) 为数据点添加提示, 类似点击数据点后的提示, g 为创建图像后返回的图像对象</li><li>rectangle 创建带有尖角或圆角的矩形</li><li>ginput 获取用户点击的坐标</li></ol><h3 id="图像外观" tabindex="-1"><a class="header-anchor" href="#图像外观" aria-hidden="true">#</a> 图像外观</h3>`,10),H={href:"https://ww2.mathworks.cn/help/matlab/axes.html",target:"_blank",rel:"noopener noreferrer"},P=e('<ol><li>axis 设置坐标轴范围和纵横比 <ul><li>square x,y 轴长度相同</li><li>equal x,y 轴绘制比例相同</li><li>tight x,y切齐图像</li></ul></li><li>box 设置坐标区轮廓</li><li>grid 显示或隐藏坐标区网格线</li><li>坐标轴刻度等设置见文档</li><li>colormap 设置图像颜色, 用于三维图像</li></ol><h3 id="图像绘制控制" tabindex="-1"><a class="header-anchor" href="#图像绘制控制" aria-hidden="true">#</a> 图像绘制控制</h3><ol><li>hold on/off hold on 与 hold off 之间的绘图命令将公用一个图像, 实现将多个图像画在一个坐标系上的效果</li><li>subplot(m,n,p) 在一个窗口中绘制多个图片 <ol><li>m, n 为子图像的布局</li><li>p 为之后图像绘制在第 p 的子图像中</li></ol></li><li>yyaxis left/right 将个图像画在一个坐标系中, 其中 yyaxis left 命令之后的图形其 y 轴将在左侧 <ul><li>两个 y 轴相关图像属性等独立, 仅公用 x 轴</li><li>可配合 hold 使用, 优先于 hold</li></ul></li></ol><h2 id="图像绘制-1" tabindex="-1"><a class="header-anchor" href="#图像绘制-1" aria-hidden="true">#</a> 图像绘制</h2>',4),S={href:"https://ww2.mathworks.cn/help/matlab/2-and-3d-plots.html",target:"_blank",rel:"noopener noreferrer"},D=e('<h3 id="基本二维图像" tabindex="-1"><a class="header-anchor" href="#基本二维图像" aria-hidden="true">#</a> 基本二维图像</h3><p>plot(X1, Y2, style1, X2, Y2, style2, ...)</p><ol><li>Xn X 坐标的数据</li><li>Yn Y 坐标的数据</li><li>style<sub>n</sub> 一个表示曲线/点风格的字符串</li></ol><h3 id="对数图" tabindex="-1"><a class="header-anchor" href="#对数图" aria-hidden="true">#</a> 对数图</h3><p>semilogx/y</p><ol><li>创建一个 x/y 轴为对数刻度的图像</li><li>可使用 logspace 创建指数数列</li><li>默认以 10 为刻度的底数</li></ol><h3 id="直方图" tabindex="-1"><a class="header-anchor" href="#直方图" aria-hidden="true">#</a> 直方图</h3><p>histogram(x, bins)</p><ol><li>直方图通过统计 x 在特定区间的出现次数决定直方高度</li><li>x 为直方图数据</li><li>bins 为 x 的区间, 不写时自动划分</li><li>可以手动指定区间, 见函数说明</li></ol><h3 id="柱状图" tabindex="-1"><a class="header-anchor" href="#柱状图" aria-hidden="true">#</a> 柱状图</h3><p>bar/barh(x, y)</p><ol><li>barh 为水平直方图</li><li>x 为图中各柱的名称, y 为各柱的高度</li><li>参数 &#39;stacked&#39; 可将柱状图分组</li></ol><h3 id="箱线图" tabindex="-1"><a class="header-anchor" href="#箱线图" aria-hidden="true">#</a> 箱线图</h3><p>boxplot 两端为最大最小值，中间红线为平均值，中间的矩形为25%与75%分数，红色加号为超过两个标准差的点(异常点)</p><h3 id="其他二维图像" tabindex="-1"><a class="header-anchor" href="#其他二维图像" aria-hidden="true">#</a> 其他二维图像</h3><ol><li>pie 饼状图</li><li>polarplot 极坐标(此时不可使用 hold)</li><li>stairs 阶梯图</li><li>errorbar 含误差条的线图</li><li>scatter 散点图</li></ol><h3 id="三维图" tabindex="-1"><a class="header-anchor" href="#三维图" aria-hidden="true">#</a> 三维图</h3><ol><li>plot3(x, y, z) 绘制三维曲线</li><li>surf 绘制三维曲面</li><li>mesh 绘制三维网格</li></ol><ul><li>三维图绘制方法查手册</li></ul><h1 id="数据统计" tabindex="-1"><a class="header-anchor" href="#数据统计" aria-hidden="true">#</a> 数据统计</h1><h2 id="数据处理-1" tabindex="-1"><a class="header-anchor" href="#数据处理-1" aria-hidden="true">#</a> 数据处理</h2><ol><li>mean 平均值</li><li>median 中位数</li><li>mode 众数</li><li>prctile 分位数</li><li>max 最大值</li><li>min 最小值</li><li>std 标准差(无偏 分母加一)</li><li>var 方差(无偏)</li></ol><h2 id="数据拟合" tabindex="-1"><a class="header-anchor" href="#数据拟合" aria-hidden="true">#</a> 数据拟合</h2><h3 id="多项式拟合" tabindex="-1"><a class="header-anchor" href="#多项式拟合" aria-hidden="true">#</a> 多项式拟合</h3><p>polyfit(x, y, order)</p><ol><li>x, y 为数据</li><li>order 为多项式次数</li><li>返回一个数组, 为拟合结果各项(从高次到0)的系数</li></ol><h3 id="线性相关度" tabindex="-1"><a class="header-anchor" href="#线性相关度" aria-hidden="true">#</a> 线性相关度</h3><p>corrcoef(x, y) 返回一个对称矩阵, 对角线位置为 x 与 y 的线性相关度</p><h3 id="其他拟合函数" tabindex="-1"><a class="header-anchor" href="#其他拟合函数" aria-hidden="true">#</a> 其他拟合函数</h3>',29),F=a("li",null,"regress 多变量拟合",-1),G={href:"https://www.jianshu.com/p/1707ede94dfa",target:"_blank",rel:"noopener noreferrer"},J=e('<h2 id="数据插值" tabindex="-1"><a class="header-anchor" href="#数据插值" aria-hidden="true">#</a> 数据插值</h2><h3 id="三次样条插值" tabindex="-1"><a class="header-anchor" href="#三次样条插值" aria-hidden="true">#</a> 三次样条插值</h3><p>spline(x, y, t)</p><ol><li>t 为插值曲线的 x 坐标刻度</li><li>返回数组 s, 保存 t 对应的插值结果 y 坐标</li></ol><h3 id="三次分段-hermite-插值" tabindex="-1"><a class="header-anchor" href="#三次分段-hermite-插值" aria-hidden="true">#</a> 三次分段 Hermite 插值</h3><p>pchip(x, y, t)</p><ul><li>同 spline</li></ul><h3 id="一维插值" tabindex="-1"><a class="header-anchor" href="#一维插值" aria-hidden="true">#</a> 一维插值</h3><p>interp1(x, y, t, method)</p><ol><li>前参数同 spline</li><li>method 用于指定插值方法</li></ol>',10);function K(O,Q){const n=t("ExternalLinkIcon");return r(),o("div",null,[p,a("p",null,[a("a",h,[s("官方文档 - 输入命令"),l(n)])]),d,a("p",null,[a("a",m,[s("官方文档 - 矩阵构建"),l(n)])]),u,g,a("p",null,[a("a",b,[s("官方文档 - 矩阵索引"),l(n)])]),v,k,x,f,_,a("p",null,[a("a",w,[s("官方文档 - 多维矩阵"),l(n)]),s(" A(row, column, layer) 先定义多维矩阵的第一层, 然后使用 A(:, :, 2) = B, 定义多维矩阵的其他层")]),y,a("p",null,[a("a",M,[s("官方文档 - 矩阵运算/逻辑运算"),l(n)])]),z,A,a("p",null,[a("a",B,[s("官方文档 - 矩阵创建/测量"),l(n)])]),L,q,a("p",null,[a("a",j,[s("官方文档 - 布尔运算"),l(n)]),s(" (逻辑运算符官方文档地址见矩阵运算)")]),N,a("p",null,[a("a",X,[s("官方文档 - 控制流和分支"),l(n)])]),C,a("p",null,[a("a",T,[s("官方文档 - 脚本"),l(n)])]),E,a("p",null,[a("a",R,[s("官方文档 - 函数"),l(n)])]),U,a("p",null,[a("a",V,[s("官方文档 - 数据导入和导出"),l(n)])]),Y,a("p",null,[a("a",I,[s("官方文档 - 注释与格式"),l(n)])]),$,a("p",null,[a("a",H,[s("官方文档 - 图像外观"),l(n)])]),P,a("p",null,[a("a",S,[s("官方文档 - 图像绘制"),l(n)])]),D,a("ol",null,[F,a("li",null,[s("cftool 非线性拟合工具 "),a("a",G,[s("拟合结果评估方法"),l(n)])])]),J])}const aa=i(c,[["render",K],["__file","matlab.html.vue"]]);export{aa as default};
