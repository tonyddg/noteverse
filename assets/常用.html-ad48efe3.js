import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-8c5ce49e.js";const t={},p=e(`<h3 id="判断一个对象是否含有属性" tabindex="-1"><a class="header-anchor" href="#判断一个对象是否含有属性" aria-hidden="true">#</a> 判断一个对象是否含有属性</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">member</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//true</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>member <span class="token keyword">in</span> obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="迭代-for" tabindex="-1"><a class="header-anchor" href="#迭代-for" aria-hidden="true">#</a> 迭代 for</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断-null-与-undefined" tabindex="-1"><a class="header-anchor" href="#判断-null-与-undefined" aria-hidden="true">#</a> 判断 null 与 undefined</h3><p>数字 0、空字符串 &quot;&quot;、null、undefined 和 NaN 都会被转换成 false</p><h3 id="判断对象是否是类的实例" tabindex="-1"><a class="header-anchor" href="#判断对象是否是类的实例" aria-hidden="true">#</a> 判断对象是否是类的实例</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//true</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token keyword">instanceof</span> <span class="token class-name">Test</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),c=[p];function i(o,l){return a(),s("div",null,c)}const u=n(t,[["render",i],["__file","常用.html.vue"]]);export{u as default};
