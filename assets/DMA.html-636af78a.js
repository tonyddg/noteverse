import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,e as r}from"./app-8c5ce49e.js";const l={},d=r('<h1 id="直接存储器访问-dma" tabindex="-1"><a class="header-anchor" href="#直接存储器访问-dma" aria-hidden="true">#</a> 直接存储器访问 DMA</h1><h2 id="外设介绍" tabindex="-1"><a class="header-anchor" href="#外设介绍" aria-hidden="true">#</a> 外设介绍</h2><p>直接存储器访问 传输数据, 但不占用 CPU, 可以访问外设, FLASH, SRAM 等存储器</p><h3 id="dma-控制器" tabindex="-1"><a class="header-anchor" href="#dma-控制器" aria-hidden="true">#</a> DMA 控制器</h3><p>DMA 控制器下由多个通道, 联系各个存储器与外设(查表) 每个通道可以接收多个请求, 但一次只能处理一个请求 有多个请求时, 通过寄存器设置, 确定处理顺序</p><h2 id="标准库配置" tabindex="-1"><a class="header-anchor" href="#标准库配置" aria-hidden="true">#</a> 标准库配置</h2><h3 id="dma-初始化结构体" tabindex="-1"><a class="header-anchor" href="#dma-初始化结构体" aria-hidden="true">#</a> DMA 初始化结构体</h3><ol><li>DMA_PeripheralBaseAddr 外设地址 通过 &amp; 获得外设地址(eg. &amp;(USART1-&gt;DX))</li><li>DMA_MemoryBaseAddr 存储器地址 存储器地址, 即一个变量/数组的地址</li><li>DMA_DIR 传输方向 Peripheral/MemoryDST 以外设/存储器作为传输目的地</li><li>DMA_BufferSize 传输数据量</li><li>DMA_PeripheralInc 外设地址增量模式 ENABLE 增量模式, 每次传输后, 地址移动一位</li><li>DMA_MemoryInc 储存器地址增量模式</li><li>DMA_PeripheralDataSize 外设数据宽度 可选择 Byte(8位), HalfWord(16位), Word(32位)</li><li>DMA_MemoryDataSize 存储器数据宽度 通常与外设数据宽度一致</li><li>DMA_Mode 模式选择 一次传输(Normal)或循环传输(Circular)</li><li>DMA_Priority DMA 优先级 High Medium Low 等</li><li>DMA_M2M 是否为存储器到存储器模式 ENABLE 为开启, 此时 外设视为另一个存储器, 用于复制大数据量的数组(DMA 传输不占用 CPU)</li></ol><h3 id="启动配置" tabindex="-1"><a class="header-anchor" href="#启动配置" aria-hidden="true">#</a> 启动配置</h3><ol start="0"><li>DMA 的时钟配置</li><li>DMA_Init(通道, 配置) 初始化配置 注意, 非 M2M 中, 选择通道时必须先检查通道是否支持所用的外设</li><li>DMA_Cmd(通道, ENABLE) 启动 DMA 传输 当再次启动时(一次模式), 需要先关闭(DISABLE)</li><li>XXX_DMACmd 启动传输, 除了 M2M 模式之外, 都必须使用此类函数启动, 再次使用时则要先关闭再启动(一次模式) 使用外设时还要保证外设相关的外设已初始化</li></ol><h3 id="状态检查" tabindex="-1"><a class="header-anchor" href="#状态检查" aria-hidden="true">#</a> 状态检查</h3><ul><li>n 控制器编号</li><li>x 使用通道</li></ul><ol><li>DMAn_FLAG_TCx 传输完成标识</li><li>DMAn_FLAG_HTx 传输一般标识</li><li>DMAn_FLAG_TEx 传输错误标识</li></ol>',13),h=[d];function t(n,o){return a(),e("div",null,h)}const _=i(l,[["render",t],["__file","DMA.html.vue"]]);export{_ as default};
