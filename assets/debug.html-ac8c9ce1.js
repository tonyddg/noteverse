import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as t}from"./app-8c5ce49e.js";const r={},l=t('<h1 id="调试选项" tabindex="-1"><a class="header-anchor" href="#调试选项" aria-hidden="true">#</a> 调试选项</h1><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>todo</p></div><p>在正式 Release 时关闭</p><ol><li>RECORD_STACK_HIGH_ADDRESS</li><li>GENERATE_RUN_TIME_STATS</li><li>USE_STATS_FORMATTING_FUNCTIONS</li></ol><h2 id="踩坑笔记" tabindex="-1"><a class="header-anchor" href="#踩坑笔记" aria-hidden="true">#</a> 踩坑笔记</h2><h3 id="进入-hardfault" tabindex="-1"><a class="header-anchor" href="#进入-hardfault" aria-hidden="true">#</a> 进入 HardFault</h3><ol><li>检查对空间是否足够</li><li>不能再内核启动前调用如 osDelay 等函数</li></ol><h3 id="内存释放出错" tabindex="-1"><a class="header-anchor" href="#内存释放出错" aria-hidden="true">#</a> 内存释放出错</h3><p>在任何 .cpp / .hpp 中, 必须将 new, new[], delete, delete[] 的全局重载导入并且作为第一个 include 的文件, 否则全局重载不会被调用, 特别是使用了 string 等 stl 容器, 以及编写与 rtos 无关的, 设计内存处理的库, 都必须先 include 有关全局重载</p>',9),d=[l];function n(h,o){return a(),i("div",null,d)}const _=e(r,[["render",n],["__file","debug.html.vue"]]);export{_ as default};
