import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,b as n,d as s,a as e,e as t}from"./app-8c5ce49e.js";const l="/noteverse/assets/anatomy-06caf29e.webp",u="/noteverse/assets/matplotlib_log2tick-ef235a15.svg",r="/noteverse/assets/matplotlib_3x3subplot-f512a8aa.svg",d="/noteverse/assets/matplotlib_complex_layout-f016c7fd.svg",k="/noteverse/assets/matplotlib_funcanimation-1458df3d.gif",b={},m=t(`<h1 id="matplotlib-笔记" tabindex="-1"><a class="header-anchor" href="#matplotlib-笔记" aria-hidden="true">#</a> Matplotlib 笔记</h1><blockquote><p>基于 Matplotlib 版本 3.8.0</p></blockquote><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><h3 id="基本使用-1" tabindex="-1"><a class="header-anchor" href="#基本使用-1" aria-hidden="true">#</a> 基本使用</h3><p>一般情况下, 调用 Matplot.pyplot 用于绘图, 并采通常采用别名 <code>plt</code><br> 并且 Matplotlib 还会配合 Numpy 使用</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt 

x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>

fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
axe <span class="token operator">=</span> fig<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> 
axe<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="画布元素" tabindex="-1"><a class="header-anchor" href="#画布元素" aria-hidden="true">#</a> 画布元素</h3><figure><img src="`+l+'" alt="" height="400" tabindex="0"><figcaption></figcaption></figure><p>对于一张画布上, 共有如图所示的多个元素</p><table><thead><tr><th>类名</th><th>名称(非官方)</th><th>创建/设置</th></tr></thead><tbody><tr><td><code>Figure</code></td><td>画布</td><td><code>fig = plt.figure()</code></td></tr><tr><td><code>Axe</code></td><td>图像</td><td><code>axes = fig.subplots(...)</code></td></tr><tr><td><code>Line</code></td><td>曲线</td><td><code>axe.plot(x, y)</code></td></tr><tr><td><code>Markers</code></td><td>标记点</td><td><code>axe.scatter(x, y, s)</code></td></tr><tr><td><code>Axis</code></td><td>坐标轴</td><td><code>axis = axe.xaxis/yaxis</code></td></tr><tr><td><code>Tick</code></td><td>刻度</td><td><code>axis.set_ticks()</code></td></tr><tr><td><code>Grid</code></td><td>网格</td><td><code>axe.grid(...)</code></td></tr><tr><td><code>Spine</code></td><td></td><td><code>plt.spine</code></td></tr></tbody></table><h2 id="图像-axe" tabindex="-1"><a class="header-anchor" href="#图像-axe" aria-hidden="true">#</a> 图像 Axe</h2><h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h3><h4 id="设置坐标轴名称" tabindex="-1"><a class="header-anchor" href="#设置坐标轴名称" aria-hidden="true">#</a> 设置坐标轴名称</h4><h4 id="设置标题名称" tabindex="-1"><a class="header-anchor" href="#设置标题名称" aria-hidden="true">#</a> 设置标题名称</h4><h4 id="设置图例" tabindex="-1"><a class="header-anchor" href="#设置图例" aria-hidden="true">#</a> 设置图例</h4><h4 id="图形边距" tabindex="-1"><a class="header-anchor" href="#图形边距" aria-hidden="true">#</a> 图形边距</h4><p><code>Axes.margins()</code></p><h4 id="图像背景颜色" tabindex="-1"><a class="header-anchor" href="#图像背景颜色" aria-hidden="true">#</a> 图像背景颜色</h4><p><code>Axes.patch.set_facecolor()</code></p><h3 id="坐标轴-axis" tabindex="-1"><a class="header-anchor" href="#坐标轴-axis" aria-hidden="true">#</a> 坐标轴 Axis</h3><h4 id="双坐标轴图" tabindex="-1"><a class="header-anchor" href="#双坐标轴图" aria-hidden="true">#</a> 双坐标轴图</h4><p><code>Axes.twinx/y()</code></p><h4 id="设置轴比例" tabindex="-1"><a class="header-anchor" href="#设置轴比例" aria-hidden="true">#</a> 设置轴比例</h4><p><code>Axis.set_xscale(value, **kwargs)/set_yscale(value, **kwargs)</code> 可以用于设置坐标轴刻度间隔的比例模式</p>',24),h=t("<li>参数 <code>value</code> 为模式名称 <ul><li><code>&quot;linear&quot;</code> 线性模式, 刻度间隔与刻度值成正比</li><li><code>&quot;log&quot;</code> 对数模式, 刻度间隔与刻度两端值的比值成正比</li><li><code>&quot;symlog&quot;</code> 对称对数模式</li><li><code>&quot;function&quot;</code> 自定义, 见官方文档</li></ul></li>",1),v=n("code",null,"**kwargs",-1),g={href:"https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.xscale.html#matplotlib.pyplot.xscale",target:"_blank",rel:"noopener noreferrer"},f=n("ul",null,[n("li",null,[s("eg. "),n("code",null,"log"),s(" 模式下, 有参数 "),n("code",null,"base"),s(" 设置底数, "),n("code",null,"subs"),s(" 设置子刻度")])],-1),x={href:"https://matplotlib.org/stable/gallery/scales/scales.html#sphx-glr-gallery-scales-scales-py",target:"_blank",rel:"noopener noreferrer"},_=t(`<h4 id="设置横纵坐标轴比例-图像比例" tabindex="-1"><a class="header-anchor" href="#设置横纵坐标轴比例-图像比例" aria-hidden="true">#</a> 设置横纵坐标轴比例 (图像比例)</h4><p><code>Axes.set_aspect()</code></p><h4 id="显示-关闭轴线" tabindex="-1"><a class="header-anchor" href="#显示-关闭轴线" aria-hidden="true">#</a> 显示/关闭轴线</h4><p><code>Axis.set_visible(b)</code> 用于显示关闭轴线<br> 当轴线不显示时, 包括轴标签, 刻度在内的元素都不会显示</p><ul><li>参数 <code>b</code> 为是否显示轴, 当为 <code>False</code> 时, 轴隐藏, 但图像边界 <code>spine</code> 不会隐藏</li></ul><h3 id="刻度-tick" tabindex="-1"><a class="header-anchor" href="#刻度-tick" aria-hidden="true">#</a> 刻度 Tick</h3><h4 id="设置坐标轴刻度与标签" tabindex="-1"><a class="header-anchor" href="#设置坐标轴刻度与标签" aria-hidden="true">#</a> 设置坐标轴刻度与标签</h4><p><code>Axis.set_ticks(ticks, label = None, is_minor = False)</code> 用于设置刻度与子刻度的位置以及刻度</p><ul><li>参数 <code>ticks</code> 为刻度值数组<br> 传入空数组 <code>[]</code> 可以不显示 / 隐藏刻度</li><li>参数 <code>label</code> 为刻度标签数组<br> 通常情况数组长度必须与 <code>ticks</code> 相同, 或为 <code>None</code> (自动生成)<br> 传入空数组 <code>[]</code> 可以不显示 / 隐藏标签</li><li>参数 <code>is_minor</code> 为是否设置子刻度, 默认设置刻度</li></ul><h4 id="设置刻度显示" tabindex="-1"><a class="header-anchor" href="#设置刻度显示" aria-hidden="true">#</a> 设置刻度显示</h4><p><code>Axis.set_tick_params(which, direction, labelsize, labelcolor, labelrotation)</code> 用于设置刻度 (见文档), 及其标签的显示<br> 该函数也可用于设置网格</p><ul><li>参数 <code>which</code> 为被设置的刻度, 可取值 <code>{&#39;major&#39;, &#39;minor&#39;, &#39;both&#39;}</code></li><li>参数 <code>direction</code> 为刻度方向, 可取值 <code>{&#39;in&#39;, &#39;out&#39;, &#39;inout&#39;}</code></li><li>参数 <code>labelsize</code> 为刻度标签大小</li><li>参数 <code>labelcolor</code> 为刻度标签颜色</li><li>参数 <code>labelrotation</code> 为刻度旋转角度</li></ul><h4 id="显示-关闭子刻度" tabindex="-1"><a class="header-anchor" href="#显示-关闭子刻度" aria-hidden="true">#</a> 显示/关闭子刻度</h4><p><code>Axe.minorticks_on/off()</code> 可用于设置子刻度的开关<br> 当调用 <code>Axe.minorticks_on()</code> 后, 所有子刻度线都将开启<br> 当子刻度开启后, 还需要使用 <code>Axis.set_ticks(..., minor = True)</code> 设置才能显示子刻度<br> 应最后调用此函数, 保证设置生效</p><h4 id="获取刻度标签元素-高级刻度显示" tabindex="-1"><a class="header-anchor" href="#获取刻度标签元素-高级刻度显示" aria-hidden="true">#</a> 获取刻度标签元素 (高级刻度显示)</h4><p><code>Axis.get_ticklabels</code></p><h4 id="示例-以-2-为底的对数坐标轴" tabindex="-1"><a class="header-anchor" href="#示例-以-2-为底的对数坐标轴" aria-hidden="true">#</a> 示例 : 以 2 为底的对数坐标轴</h4><p>注意, 通过<a href="#%E8%AE%BE%E7%BD%AE%E8%BD%B4%E6%AF%94%E4%BE%8B">set_xscale</a>可以更简单达到示例效果, 此处仅用于演示</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

x <span class="token operator">=</span> np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> base <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>log2<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span>

fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
axe <span class="token operator">=</span> fig<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>
axe<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>

<span class="token comment"># 将刻度长度设为对数模式</span>
axe<span class="token punctuation">.</span>set_xscale<span class="token punctuation">(</span><span class="token string">&#39;log&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 默认为以 10 为底, 通过设置刻度位置, 改为以 2 为底</span>
ticks <span class="token operator">=</span> np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> base <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>

<span class="token comment"># 使用推导式快速生成刻度名称</span>
axe<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks<span class="token punctuation">(</span>
    ticks <span class="token operator">=</span> ticks<span class="token punctuation">,</span>
    labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;$2^{{{num:.1f}}}$&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>num <span class="token operator">=</span> np<span class="token punctuation">.</span>log2<span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">)</span> 
     <span class="token keyword">for</span> it <span class="token keyword">in</span> ticks
     <span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 使用推导式快速生成子刻度</span>
axe<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks<span class="token punctuation">(</span>ticks <span class="token operator">=</span> 
    <span class="token punctuation">[</span><span class="token punctuation">(</span>ticks<span class="token punctuation">[</span>it <span class="token operator">//</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>it <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">)</span> 
    <span class="token keyword">for</span> it <span class="token keyword">in</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token punctuation">(</span>ticks<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span> 
    <span class="token keyword">if</span> it <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">!=</span> <span class="token number">0</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> 
    <span class="token comment"># 传入空数组, 以隐藏子刻度标签</span>
    labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    minor <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 迭代刻度标签元素, 进行高级设置</span>
<span class="token keyword">for</span> it <span class="token keyword">in</span> axe<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>get_ticklabels<span class="token punctuation">(</span>minor <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 
    <span class="token comment"># 通过标签的 Text 元素来设置标签样式</span>
    it<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>rotation<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span> rotation_mode<span class="token operator">=</span><span class="token string">&quot;anchor&quot;</span><span class="token punctuation">)</span>

fig<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">&quot;matplotlib_log2tick.svg&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>绘图结果</p><figure><img src="`+u+`" alt="" height="400" tabindex="0"><figcaption></figcaption></figure><h3 id="网格-grid" tabindex="-1"><a class="header-anchor" href="#网格-grid" aria-hidden="true">#</a> 网格 Grid</h3><h4 id="显示网格" tabindex="-1"><a class="header-anchor" href="#显示网格" aria-hidden="true">#</a> 显示网格</h4><p><code>Axes.grid(visible = None, which = &#39;major&#39;, axis = &#39;both&#39;)</code></p><h4 id="设置网格样式" tabindex="-1"><a class="header-anchor" href="#设置网格样式" aria-hidden="true">#</a> 设置网格样式</h4><p><code>Axis.set_tick_params(which, grid_color, grid_alpha, grid_linewidth, grid_linestyle)</code></p><h3 id="边框-spine" tabindex="-1"><a class="header-anchor" href="#边框-spine" aria-hidden="true">#</a> 边框 Spine</h3><h2 id="画布-figure" tabindex="-1"><a class="header-anchor" href="#画布-figure" aria-hidden="true">#</a> 画布 Figure</h2><h3 id="基本操作-1" tabindex="-1"><a class="header-anchor" href="#基本操作-1" aria-hidden="true">#</a> 基本操作</h3><h4 id="创建画布" tabindex="-1"><a class="header-anchor" href="#创建画布" aria-hidden="true">#</a> 创建画布</h4><p><code>fig = plt.figure(figsize = (6, 8), dpi = 100, facecolor = &#39;white&#39;, layout)</code><br> 用于创建画布</p><ul><li>参数 <code>figsize</code> 为画布大小<br> 使用元组 <code>(w, h)</code> 分别表示长与宽<br> 对应设置 <code>fig.set_size_inches(w, h)</code></li><li>参数 <code>dpi</code> 为画布分辨率<br> 默认情况下长度参数 (如画布大小) 对应的实际像素为 参数大小乘以分辨率<br> 对应设置 <code>fig.set_dpi(val = 100)</code></li><li>参数 <code>facecolor</code> 为画布颜色</li><li>参数 <code>layout</code> 为画布内的图像布局方式, 取值为 <code>{&#39;constrained&#39;, &#39;compressed&#39;, &#39;tight&#39;, &#39;none&#39;, LayoutEngine, None}</code><br> 详见<a href="#%E5%9F%BA%E6%9C%AC%E5%B8%83%E5%B1%80-subplot">基本布局</a></li></ul><h4 id="画布标题" tabindex="-1"><a class="header-anchor" href="#画布标题" aria-hidden="true">#</a> 画布标题</h4><p><code>fig.suptitle(t, size)</code> 用于设置画布标题</p><ul><li>参数 <code>t</code> 标题文字</li><li>参数 <code>size</code> 文字大小, 取值</li></ul><h4 id="输出画布" tabindex="-1"><a class="header-anchor" href="#输出画布" aria-hidden="true">#</a> 输出画布</h4><p><code>fig.savefig(fname)</code> 保存画布</p><ul><li>参数 <code>fname</code> 为保存图片的名称, 根据名称后缀自动确定格式<br> 支持 <code>.svg</code>, <code>.jpg</code>, <code>.png</code> 等格式</li></ul><h3 id="基本布局" tabindex="-1"><a class="header-anchor" href="#基本布局" aria-hidden="true">#</a> 基本布局</h3><h4 id="设置布局方式" tabindex="-1"><a class="header-anchor" href="#设置布局方式" aria-hidden="true">#</a> 设置布局方式</h4><p><code>fig.set_layout_engine(layout=None, **kwargs)</code><br> 用于设置画布基本布局引擎</p><ul><li>参数 <code>layout</code> 包含 <code>{&#39;constrained&#39;, &#39;compressed&#39;, &#39;tight&#39;, &#39;none&#39;, LayoutEngine, None}</code><ul><li>默认情况下为 <code>None</code>, 此时不进行布局处理, 可能会出现图像重叠</li><li><code>constrained</code> 调整图像大小以防止图像间的元素重叠, 用于一般情况</li><li><code>compressed</code> 与 <code>constrained</code> 算法相同, 但会移除图像间的多余空间, 用于网格图像</li><li><code>tight</code> 调整图像参数以防止图像间的元素重叠</li></ul></li><li>参数 <code>**kwargs</code> 为布局引擎设置, 具体见文档, 以下为常用的参数 <ul><li>参数 <code>h_pad</code> 子图像在长度方向的内边距</li><li>参数 <code>w_pad</code> 子图像在宽度方向的内边距</li><li>参数 <code>hspace</code> 子图像在长度方向的外边距 (<code>tight</code> 模式无此参数)</li><li>参数 <code>wspace</code> 子图像在宽度方向的外边距 (<code>tight</code> 模式无此参数)</li></ul></li></ul><h4 id="新建子图像" tabindex="-1"><a class="header-anchor" href="#新建子图像" aria-hidden="true">#</a> 新建子图像</h4><p><code>axes = fig.subplots(nrows = 1, ncols = 1, *, sharex = False, sharey = False)</code><br> 创建子图像, 并对子图像进行简单布局</p><ul><li>参数 <code>nrows</code> 设置子图像行数</li><li>参数 <code>ncols</code> 设置子图像列数</li><li>参数 <code>sharex</code> 设置 x 轴在子图像之间是否共享 / 共享方式, 可选参数 <code>bool or {&#39;none&#39;, &#39;all&#39;, &#39;row&#39;, &#39;col&#39;}</code></li><li>参数 <code>sharey</code> 设置 y 轴在子图像之间是否共享 / 共享方式, 可选参数 <code>bool or {&#39;none&#39;, &#39;all&#39;, &#39;row&#39;, &#39;col&#39;}</code></li></ul><h4 id="添加子图像" tabindex="-1"><a class="header-anchor" href="#添加子图像" aria-hidden="true">#</a> 添加子图像</h4><p><code>axe = fig.add_subplot(nrows = 1, ncols = 1, index = 1, sharex = False, sharey = False, projection)</code> 通过逐个添加的方式创建子图像, 该方法与<a href="#%E6%96%B0%E5%BB%BA%E5%AD%90%E5%9B%BE%E5%83%8F">fig.subplots</a>冲突, 但可用于创建极坐标等图像</p><ul><li>参数 <code>nrows</code> 设置子图像总行数</li><li>参数 <code>ncols</code> 设置子图像总列数</li><li>参数 <code>index</code> 被设置的子图像索引</li><li>参数 <code>sharex</code> 设置 x 轴在子图像之间是否共享 / 共享方式, 可选参数 <code>bool or {&#39;none&#39;, &#39;all&#39;, &#39;row&#39;, &#39;col&#39;}</code></li><li>参数 <code>sharey</code> 设置 y 轴在子图像之间是否共享 / 共享方式, 可选参数 <code>bool or {&#39;none&#39;, &#39;all&#39;, &#39;row&#39;, &#39;col&#39;}</code></li><li>参数 <code>projection</code> 为子图像类别, 如极坐标图, 可选择参数 <code>{None, &#39;aitoff&#39;, &#39;hammer&#39;, &#39;lambert&#39;, &#39;mollweide&#39;, &#39;polar&#39;, &#39;rectilinear&#39;, &#39;3d&#39;, str}</code><ul><li><code>polar</code> 表示极坐标图</li><li><code>rectilinear</code> 表示二维空间坐标图</li><li><code>3d</code> 表示三维空间坐标图 (详见<a href="#%E4%B8%89%E7%BB%B4%E5%9B%BE%E5%83%8F%E7%BB%98%E5%88%B6">三维图像绘制</a>)</li><li>其余图像主要用于地理</li></ul></li></ul><h4 id="示例-九宫格图" tabindex="-1"><a class="header-anchor" href="#示例-九宫格图" aria-hidden="true">#</a> 示例 : 九宫格图</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np 

<span class="token comment"># 子图像紧贴时, 最好使用大图幅</span>
fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 将内外边距均设置为 0, 实现子图像紧贴的效果</span>
<span class="token comment"># 使用此语句可达到同样的效果 fig.set_layout_engine(&#39;tight&#39;, w_pad = 0, h_pad = 0)</span>
fig<span class="token punctuation">.</span>set_layout_engine<span class="token punctuation">(</span><span class="token string">&#39;compressed&#39;</span><span class="token punctuation">,</span> w_pad <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h_pad <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> wspace <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> hspace <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
fig<span class="token punctuation">.</span>suptitle<span class="token punctuation">(</span><span class="token string">&#39;$y=e^{st}$&#39;</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span>
<span class="token comment"># 设置子图像的 x 轴按 列共享, y 轴按行共享</span>
axes <span class="token operator">=</span> fig<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> sharex <span class="token operator">=</span> <span class="token string">&#39;col&#39;</span><span class="token punctuation">,</span> sharey <span class="token operator">=</span> <span class="token string">&#39;row&#39;</span><span class="token punctuation">)</span>

t <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 通过断言保持类型被编辑器识别</span>
        axe <span class="token punctuation">:</span> plt<span class="token punctuation">.</span>Axes <span class="token operator">=</span> axes<span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span>
        axe<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">,</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.6</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1j</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">*</span> <span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 通过 transform = axe.transAxes 设置, 使用相对坐标确定文本位置</span>
        axe<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token string">&#39;s = {0} + {1}i&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">*</span> j<span class="token punctuation">,</span> <span class="token number">0.6</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                 transform <span class="token operator">=</span> axe<span class="token punctuation">.</span>transAxes<span class="token punctuation">)</span>

        <span class="token comment"># 仅保留左下角的刻度</span>
        <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">:</span>
            axe<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> j <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            axe<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># 输出图像</span>
fig<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">&#39;matplotlib_3x3subplot.svg&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出图形</p><figure><img src="`+r+`" alt="" height="300" tabindex="0"><figcaption></figcaption></figure><h3 id="栅格布局-gridspec" tabindex="-1"><a class="header-anchor" href="#栅格布局-gridspec" aria-hidden="true">#</a> 栅格布局 GridSpec</h3><h4 id="创建栅格" tabindex="-1"><a class="header-anchor" href="#创建栅格" aria-hidden="true">#</a> 创建栅格</h4><p><code>gs = fig.add_gridspec(nrows, ncols, wspace, hspace)</code><br> 将画布根据栅格均分为几块区域</p><ul><li>参数 <code>nrows</code> 栅格行数</li><li>参数 <code>rcols</code> 栅格列数</li><li>参数 <code>wspace</code> 栅格在宽度方向的外边距<br> 注意由于 <code>constrained</code> 布局还有内边距, 因此要实现相连图像的效果只能使用 <code>tight</code> 模式或不采用布局处理</li><li>参数 <code>hspace</code> 栅格在长度方向的外边距</li></ul><h4 id="栅格划分比例设置" tabindex="-1"><a class="header-anchor" href="#栅格划分比例设置" aria-hidden="true">#</a> 栅格划分比例设置</h4><p><code>gs.set_height/width_ratios([ratios])</code> 设置栅格各行/列的划分长度</p><ul><li>参数 <code>ratios</code> 为一个数组, 表示各个栅格的相对长度, 将根据栅格占总长的比例划分实际长度</li></ul><h4 id="直接创建子图像" tabindex="-1"><a class="header-anchor" href="#直接创建子图像" aria-hidden="true">#</a> 直接创建子图像</h4><p><code>axes = fig.add_subplot([gs], projection)</code><br> 在指定几个栅格上创建子图像</p><ul><li>参数 <code>gs</code> 为栅格数组中的元素, 可通过选择器选择 <ul><li><code>gs[a, b]</code> 选择栅格 (a, b)</li><li><code>gs[a:, b:c]</code> 选择 a 到下边界上所有行, 与 b 到 c - 1 列上的栅格</li></ul></li><li>参数 <code>projection</code> 为子图像类别, 如极坐标图, 见<a href="#%E6%96%B0%E5%BB%BA%E5%AD%90%E5%9B%BE%E5%83%8F">新建子图像</a>说明</li></ul><h4 id="创建子栅格" tabindex="-1"><a class="header-anchor" href="#创建子栅格" aria-hidden="true">#</a> 创建子栅格</h4><p><code>sub_gs = gs[...]/sub_gs.subgridspec(nrows, ncols, wspace, hspace)</code><br> 在指定几个栅格 (子栅格) 上创建子栅格</p><ul><li>参数 <code>nrows</code> 子栅格行数</li><li>参数 <code>rcols</code> 子栅格列数</li><li>参数 <code>wspace</code> 子栅格在宽度方向的外边距<br> 注意由于 <code>constrained</code> 布局还有内边距, 因此要实现相连图像的效果只能使用 <code>tight</code> 模式或不采用布局处理</li><li>参数 <code>hspace</code> 子栅格在长度方向的外边距</li></ul><h4 id="子栅格划分比例设置" tabindex="-1"><a class="header-anchor" href="#子栅格划分比例设置" aria-hidden="true">#</a> 子栅格划分比例设置</h4><p><code>gs.set_height/width_ratios([ratios])</code> 设置栅格各行/列的划分长度</p><ul><li>参数 <code>ratios</code> 为一个数组, 表示各个栅格的相对长度, 将根据栅格占总长的比例划分实际长度</li></ul><h4 id="由子栅格创建子图像" tabindex="-1"><a class="header-anchor" href="#由子栅格创建子图像" aria-hidden="true">#</a> 由子栅格创建子图像</h4><p><code>axes = sub_gs.subplots(sharex, sharey)</code><br> 在各个子栅格上创建子图像<br> 子栅格上不能创建多个子图像, 而是将根据子栅格的划分一格自动放置一个子图像</p><ul><li>参数 <code>sharex</code> 设置 x 轴在子图像之间是否共享 / 共享方式, 可选参数 <code>bool or {&#39;none&#39;, &#39;all&#39;, &#39;row&#39;, &#39;col&#39;}</code></li><li>参数 <code>sharey</code> 设置 y 轴在子图像之间是否共享 / 共享方式, 可选参数 <code>bool or {&#39;none&#39;, &#39;all&#39;, &#39;row&#39;, &#39;col&#39;}</code></li></ul><h4 id="示例-复杂图像" tabindex="-1"><a class="header-anchor" href="#示例-复杂图像" aria-hidden="true">#</a> 示例 : 复杂图像</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 要保证 Ax3 与 Ax4 无间隔, 需要使用 tight 模式</span>
fig<span class="token punctuation">.</span>set_layout_engine<span class="token punctuation">(</span><span class="token string">&#39;tight&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 创建一个 3X3 的栅格</span>
gs <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_gridspec<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment"># 设置栅格高度比例为 2:2:1</span>
gs<span class="token punctuation">.</span>set_height_ratios<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

t <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>

<span class="token comment"># 通过将栅格作为参数传入 fig.add_subplot 的方式在特定栅格上创建子图像</span>
<span class="token comment"># ax1 占用 (0, 0)(0, 1)(1, 0)(1, 1) 四个栅格</span>
<span class="token comment"># 通过设置 projection, ax1 为极坐标图</span>
ax1 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> projection <span class="token operator">=</span> <span class="token string">&#39;polar&#39;</span><span class="token punctuation">)</span>
ax1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Ax1&#39;</span><span class="token punctuation">)</span>
ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># ax2 占用 (0, 2)(1, 2) 两个个栅格</span>
<span class="token comment"># 注意 0:2 仅能选取到 0, 1 两个元素 (不包含末尾)</span>
ax2 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
ax2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Ax2&#39;</span><span class="token punctuation">)</span>
ax2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">,</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 在 (2, 0)(2, 1)(2, 2) 处的栅格的基础上建立 1X2 的子栅格</span>
<span class="token comment"># 子栅格的间距依然可以设置</span>
sub_gs <span class="token operator">=</span> gs<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>subgridspec<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> wspace <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment"># 子栅格上的子图像无法划分, 但依然可以设置共享坐标轴</span>
axes <span class="token operator">=</span> sub_gs<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>sharey <span class="token operator">=</span> <span class="token string">&#39;row&#39;</span><span class="token punctuation">)</span>

axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Ax3&#39;</span><span class="token punctuation">)</span>
axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>

axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Ax4&#39;</span><span class="token punctuation">)</span>
axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t <span class="token operator">-</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>t <span class="token operator">-</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">)</span><span class="token punctuation">)</span>
axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>

fig<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">&quot;matplotlib_complex_layout.svg&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出图形</p><figure><img src="`+d+`" alt="" tabindex="0"><figcaption></figcaption></figure><h3 id="标记-label" tabindex="-1"><a class="header-anchor" href="#标记-label" aria-hidden="true">#</a> 标记 Label</h3><h2 id="图例" tabindex="-1"><a class="header-anchor" href="#图例" aria-hidden="true">#</a> 图例</h2><h3 id="文字-text" tabindex="-1"><a class="header-anchor" href="#文字-text" aria-hidden="true">#</a> 文字 text</h3><h3 id="箭头-arrow" tabindex="-1"><a class="header-anchor" href="#箭头-arrow" aria-hidden="true">#</a> 箭头 arrow</h3><h3 id="直线-axline" tabindex="-1"><a class="header-anchor" href="#直线-axline" aria-hidden="true">#</a> 直线 axline</h3><h2 id="图像" tabindex="-1"><a class="header-anchor" href="#图像" aria-hidden="true">#</a> 图像</h2><h3 id="统计直方图" tabindex="-1"><a class="header-anchor" href="#统计直方图" aria-hidden="true">#</a> 统计直方图</h3><h3 id="离散折线图" tabindex="-1"><a class="header-anchor" href="#离散折线图" aria-hidden="true">#</a> 离散折线图</h3><h2 id="高级绘图" tabindex="-1"><a class="header-anchor" href="#高级绘图" aria-hidden="true">#</a> 高级绘图</h2><h3 id="特殊图像绘制" tabindex="-1"><a class="header-anchor" href="#特殊图像绘制" aria-hidden="true">#</a> 特殊图像绘制</h3><h3 id="三维图像绘制" tabindex="-1"><a class="header-anchor" href="#三维图像绘制" aria-hidden="true">#</a> 三维图像绘制</h3><h4 id="创建三维图像" tabindex="-1"><a class="header-anchor" href="#创建三维图像" aria-hidden="true">#</a> 创建三维图像</h4><p>推荐的三维图像创建代码如下</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> Axes3D

<span class="token comment"># 方法一</span>
fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
axe<span class="token punctuation">:</span> Axes3D <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> projection <span class="token operator">=</span> <span class="token string">&#39;3d&#39;</span><span class="token punctuation">)</span> <span class="token comment"># type: ignore</span>

<span class="token comment"># 方法二</span>
fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
axe <span class="token operator">=</span> Axes3D<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> auto_add_to_figure<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span>axe<span class="token punctuation">)</span>

<span class="token comment"># 建议在终端中运行, 以实现与三维图像的互动</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建三维多边形" tabindex="-1"><a class="header-anchor" href="#创建三维多边形" aria-hidden="true">#</a> 创建三维多边形</h4>`,90),y={href:"https://stackoverflow.com/questions/4622057/plotting-3d-polygons",target:"_blank",rel:"noopener noreferrer"},w=n("h3",{id:"动画绘制",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#动画绘制","aria-hidden":"true"},"#"),s(" 动画绘制")],-1),q={href:"https://mp.weixin.qq.com/s?__biz=MzA3NTMzMjMyOA==&mid=2650929620&idx=1&sn=864a7c886f1bec26f005ed2cf557cf16",target:"_blank",rel:"noopener noreferrer"},A={href:"https://matplotlib.org/stable/api/_as_gen/matplotlib.animation.FuncAnimation.html#matplotlib.animation.FuncAnimation",target:"_blank",rel:"noopener noreferrer"},E=t(`<p>类构造函数主要参数</p><ol><li><code>fig</code><ul><li>类型 <code>Figure</code></li><li>用于绘制动画的画布</li></ul></li><li><code>func</code><ul><li>类型 <code>callable(frame)</code></li><li>在回调函数 <code>func</code> 中绘制每一帧, 其中参数 <code>frame</code> 为当前动画帧数</li></ul></li><li><code>frames</code><ul><li>类型 <code>int</code></li><li>动画的总帧数</li></ul></li><li><code>interval</code><ul><li>类型 <code>int</code></li><li>每一帧持续时间 (单位毫秒)</li></ul></li></ol><p>主要成员函数</p><ol><li><code>FuncAnimation.save(filename)</code><ul><li>图像保存函数</li><li>参数 <code>filename</code> 为图像的保存路径</li></ul></li></ol><p>使用注意</p><ul><li>图像绘制函数 <code>func</code> 在绘制时 <ol><li>绘制前调用 <code>Axe.clear()</code> 函数, 清除上一帧的图像</li><li>调用 <code>Axe.set_xlim</code> 与 <code>Axe.set_ylim</code> 使图像显示区域保持一致</li></ol></li></ul><p>使用示例</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">import</span> FuncAnimation

t <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>t<span class="token punctuation">)</span>

fig<span class="token punctuation">,</span> axe <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    axe<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
    axe<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">]</span><span class="token punctuation">)</span>
    axe<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    end <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>size <span class="token operator">*</span> <span class="token builtin">int</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">80</span><span class="token punctuation">)</span>
    axe<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">0</span> <span class="token punctuation">:</span> end<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token number">0</span> <span class="token punctuation">:</span> end<span class="token punctuation">]</span><span class="token punctuation">)</span>

anime <span class="token operator">=</span> FuncAnimation<span class="token punctuation">(</span>
    fig <span class="token operator">=</span> fig<span class="token punctuation">,</span>
    func <span class="token operator">=</span> update<span class="token punctuation">,</span>
    frames <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">,</span>
    interval <span class="token operator">=</span> <span class="token number">50</span>
<span class="token punctuation">)</span>

anime<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;test.gif&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>matplotlib_funcanimation 以上代码可生成动画</p><figure><img src="`+k+'" alt="" tabindex="0"><figcaption></figcaption></figure><h2 id="杂项" tabindex="-1"><a class="header-anchor" href="#杂项" aria-hidden="true">#</a> 杂项</h2><h3 id="中文显示" tabindex="-1"><a class="header-anchor" href="#中文显示" aria-hidden="true">#</a> 中文显示</h3>',12),B={href:"https://zhuanlan.zhihu.com/p/52779214?from_voters_page=true",target:"_blank",rel:"noopener noreferrer"},F=n("li",null,[s("打开模块资源文件夹 "),n("code",null,".../anaconda3/envs/[python 环境名]/Lib/site-packages/matplotlib/mpl-data"),s(" (或 "),n("code",null,"miniconda3"),s(")")],-1),j={href:"https://github.com/adobe-fonts/source-han-sans/releases/tag/2.004R",target:"_blank",rel:"noopener noreferrer"},z=t("<li>打开模块设置文件夹 <ul><li><code>C:\\用户\\[用户名]\\.matplotlib\\matplotlibrc</code> (Windows)</li><li><code>$HOME/.config/matplotlib/matplotlibrc</code> (Linux)</li></ul></li><li>打开模块设置文件夹下的 <code>fontlist-v330.json</code>, 并在键 <code>ttflist</code> 下的数组中添加如下方代码所示的结构体 <ul><li>将键 <code>fname</code> 的值改为字体路径, Windows 下安装字体后一般位于文件夹 <code>C:\\\\Windows\\\\Fonts</code></li><li>将键 <code>name</code> 的值改为字体名称, 一般输入文件名即可</li></ul></li><li>将模块资源文件夹下的 <code>matplotlibrc</code> 文件复制到模块设置文件夹并打开复制后的文件, 进行以下修改 <ol><li><code>font.family</code> 删除该选项前的 <code>#</code></li><li><code>font.sans-serif</code> 删除该选项前的 <code>#</code>, 在冒号后添加之前添加结构体中键 <code>name</code> 的值</li></ol></li>",3),N=t(`<p>结构体示例</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;fname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Path\\\\to\\\\font\\\\XXX.ttf&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;XXX&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;variant&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span>
    <span class="token property">&quot;stretch&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token string">&quot;scalable&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;__class__&quot;</span><span class="token operator">:</span> <span class="token string">&quot;FontEntry&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="简单-latex-显示" tabindex="-1"><a class="header-anchor" href="#简单-latex-显示" aria-hidden="true">#</a> 简单 Latex 显示</h3><p>Matplotlib 可以绘制简单的行内 Latex (不支持宏包)</p><p>使用时注意</p><ol><li>需要转换的部分使用 <code>$...$</code> 包括</li><li>由于反斜杠 <code>\\</code> 也是字符串转义符, 因此需要使用双反斜杠, 或使用 <code>r&#39;...&#39;</code>, 不对字符串转义</li><li>为了更好的分式显示效果, 最好使用 <code>\\dfrac</code> 表示分式</li><li>在配合 <code>str.format</code> 使用时, <code>{...}</code> 应改为 <code>{{...}}</code></li></ol><p>使用示例</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>

fig<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;二次方程求根公式: $x=\\\\dfrac{-b\\\\sqrt{b^2-4ac}}{2a}$&#39;</span><span class="token punctuation">)</span>
fig<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;$\\\\dfrac{{{num}}}{{x}}$&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function M($,L){const a=o("ExternalLinkIcon");return c(),i("div",null,[m,n("ul",null,[h,n("li",null,[s("参数 "),v,s(" 根据不同的模式而改变, 见"),n("a",g,[s("文档说明"),e(a)]),f]),n("li",null,[n("a",x,[s("示例"),e(a)])])]),_,n("p",null,[n("a",y,[s("https://stackoverflow.com/questions/4622057/plotting-3d-polygons"),e(a)])]),w,n("p",null,[s("参考自"),n("a",q,[s("文章"),e(a)])]),n("p",null,[s("使用类 "),n("a",A,[s("matplotlib.animation.FuncAnimation"),e(a)]),s(" 实现动画效果")]),E,n("blockquote",null,[n("p",null,[s("参考文章 "),n("a",B,[s("https://zhuanlan.zhihu.com/p/52779214?from_voters_page=true"),e(a)])])]),n("ol",null,[F,n("li",null,[s("将中文黑体如"),n("a",j,[s("思源黑体"),e(a)]),s("并安装或放置在特定字体文件夹 (对后缀无要求, 最好使用新字体)")]),z]),N])}const T=p(b,[["render",M],["__file","matplotlib.html.vue"]]);export{T as default};
