import{_ as h}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as i,c as t,b as e,d as a,a as o,w as l,e as n}from"./app-8c5ce49e.js";const s={},p=e("h1",{id:"conda-环境管理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#conda-环境管理","aria-hidden":"true"},"#"),a(" Conda 环境管理")],-1),u=e("p",null,"Conda 为开源的 Python 包管理工具, 分为两个版本",-1),b=e("ul",null,[e("li",null,"Miniconda 仅包含 conda 与 Python"),e("li",null,"Anaconda 包含了 conda 与 Python 以及一系列实用库")],-1),f={href:"https://zhuanlan.zhihu.com/p/638540652",target:"_blank",rel:"noopener noreferrer"},v=n('<h2 id="环境管理" tabindex="-1"><a class="header-anchor" href="#环境管理" aria-hidden="true">#</a> 环境管理</h2><h3 id="创建环境" tabindex="-1"><a class="header-anchor" href="#创建环境" aria-hidden="true">#</a> 创建环境</h3><p><code>conda create -n [env] python=[ver]</code><br> 创建指定名称与版本的环境</p><ul><li><code>env</code> 环境名称</li><li><code>ver</code> 环境中的 Python 版本, 默认安装最新版</li></ul><h3 id="克隆环境" tabindex="-1"><a class="header-anchor" href="#克隆环境" aria-hidden="true">#</a> 克隆环境</h3><p><code>conda create --clone [env1] -n [env2]</code> 通过克隆已有环境创建新环境</p><ul><li><code>env1</code> 原环境</li><li><code>env2</code> 被克隆环境</li></ul><h3 id="列出所有环境" tabindex="-1"><a class="header-anchor" href="#列出所有环境" aria-hidden="true">#</a> 列出所有环境</h3><p><code>conda env list</code><br> 列出本地所有环境, 带 <code>*</code> 的为默认环境</p><h3 id="删除环境" tabindex="-1"><a class="header-anchor" href="#删除环境" aria-hidden="true">#</a> 删除环境</h3><p><code>conda remove --name [env] --all</code><br> 删除指定名称的环境</p><ul><li><code>env</code> 被删除环境的名称</li></ul><h3 id="重命名环境" tabindex="-1"><a class="header-anchor" href="#重命名环境" aria-hidden="true">#</a> 重命名环境</h3><p><code>conda rename [env1] [env2]</code><br> 重命名环境</p><ul><li><code>env1</code> 被重命名的环境</li><li><code>env2</code> 环境新名称</li></ul><h3 id="导出环境" tabindex="-1"><a class="header-anchor" href="#导出环境" aria-hidden="true">#</a> 导出环境</h3><p><code>conda env export -n [env] &gt; [env].yaml</code><br> 将环境配置导出, 导出到文件 <code>[env].yaml</code> 中</p><ul><li><code>env</code> 被导出的环境名</li></ul><h3 id="导入环境" tabindex="-1"><a class="header-anchor" href="#导入环境" aria-hidden="true">#</a> 导入环境</h3><p><code>conda create -n [env] --file [env].yaml</code><br> 从文件 <code>[env].yaml</code> 导入环境</p><ul><li><code>env</code> 导入的环境名</li></ul><h3 id="激活环境" tabindex="-1"><a class="header-anchor" href="#激活环境" aria-hidden="true">#</a> 激活环境</h3><p><code>conda activate [env]</code><br> 激活环境, 此时终端的 Python 将基于指定的环境<br> 可直接运行 <code>python</code> 进入该环境的 Python 终端</p><p>注意, 在 powershell 终端环境下, 可能无法切换环境, 需要使用 cmd 终端环境</p><h3 id="查看环境中的包" tabindex="-1"><a class="header-anchor" href="#查看环境中的包" aria-hidden="true">#</a> 查看环境中的包</h3><p><code>conda list [pkg]</code><br> 查看环境中安装的名称为 <code>[pkg]</code> 的包<br> 当 <code>[pkg]</code> 缺省时, 则查看所有安装的包</p><h2 id="conda-配置" tabindex="-1"><a class="header-anchor" href="#conda-配置" aria-hidden="true">#</a> conda 配置</h2><h3 id="查看配置信息" tabindex="-1"><a class="header-anchor" href="#查看配置信息" aria-hidden="true">#</a> 查看配置信息</h3><p><code>conda info</code><br> 用于查看 conda 的包镜像源配置</p><h3 id="查看设置信息" tabindex="-1"><a class="header-anchor" href="#查看设置信息" aria-hidden="true">#</a> 查看设置信息</h3><p><code>conda config --show</code><br> 用于查看 conda 的配置信息</p><h3 id="清空无用文件" tabindex="-1"><a class="header-anchor" href="#清空无用文件" aria-hidden="true">#</a> 清空无用文件</h3><p><code>conda clear --all</code><br> 清除 conda 内所有的无用文件</p><h2 id="conda-包管理" tabindex="-1"><a class="header-anchor" href="#conda-包管理" aria-hidden="true">#</a> conda 包管理</h2><p>包管理时, 需要先激活被管理的环境</p>',35),x=n('<h3 id="搜索包" tabindex="-1"><a class="header-anchor" href="#搜索包" aria-hidden="true">#</a> 搜索包</h3><p><code>conda search [pkg]</code><br> 搜索名称为 <code>pkg</code> 的包</p><h3 id="列出已安装包" tabindex="-1"><a class="header-anchor" href="#列出已安装包" aria-hidden="true">#</a> 列出已安装包</h3><p><code>conda list</code><br> 列出当前环境安装的所有包</p><h3 id="安装包" tabindex="-1"><a class="header-anchor" href="#安装包" aria-hidden="true">#</a> 安装包</h3><p><code>conda install [pkg]</code><br> 安装包名称为 <code>pkg</code> 的包</p><p><code>conda install [pkg]=[ver]</code><br> 安装包名称为 <code>pkg</code> 的包, 且包的版本为 [ver]</p><p>除了安装包, 该方法还可直接用于升级环境的 Python 版本 (仅建议升级小版本)<br><code>conda install python=[ver]</code></p><h3 id="卸载包" tabindex="-1"><a class="header-anchor" href="#卸载包" aria-hidden="true">#</a> 卸载包</h3><p><code>conda uninstall [pkg]</code><br> 卸载名称为 <code>pkg</code> 的包</p><h3 id="升级包" tabindex="-1"><a class="header-anchor" href="#升级包" aria-hidden="true">#</a> 升级包</h3><p><code>conda update [pkg]</code><br> 升级名称为 <code>pkg</code> 的包<br> conda 本质也为一个包, 因此也可通过此方法升级</p><p><code>conda update --all</code><br> 升级所有包</p><h2 id="其他使用注意" tabindex="-1"><a class="header-anchor" href="#其他使用注意" aria-hidden="true">#</a> 其他使用注意</h2><h3 id="在脚本中指定环境" tabindex="-1"><a class="header-anchor" href="#在脚本中指定环境" aria-hidden="true">#</a> 在脚本中指定环境</h3><p>需要在执行的 Python 脚本中指定环境时, 需要声明解释器为<br><code>#!&lt;conda 安装环境&gt;/envs/&lt;&gt;/bin/python3.8</code></p>',16);function _(m,k){const c=d("ExternalLinkIcon"),r=d("RouterLink");return i(),t("div",null,[p,u,b,e("p",null,[a("参考资料 "),e("a",f,[a("https://zhuanlan.zhihu.com/p/638540652"),o(c)])]),v,e("p",null,[a("可以直接使用 "),o(r,{to:"/coding/py/random/pip.html"},{default:l(()=>[a("pip")]),_:1}),a(" 来安装环境中的包")]),x])}const P=h(s,[["render",_],["__file","conda.html.vue"]]);export{P as default};
