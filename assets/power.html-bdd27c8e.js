import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,e as l}from"./app-8c5ce49e.js";const r={},h=l('<h1 id="电源管理" tabindex="-1"><a class="header-anchor" href="#电源管理" aria-hidden="true">#</a> 电源管理</h1><h2 id="外设介绍" tabindex="-1"><a class="header-anchor" href="#外设介绍" aria-hidden="true">#</a> 外设介绍</h2><h3 id="电源监控" tabindex="-1"><a class="header-anchor" href="#电源监控" aria-hidden="true">#</a> 电源监控</h3><p>芯片通过 VDD 引脚从外部获取电源</p><h4 id="上电复位与掉电复位" tabindex="-1"><a class="header-anchor" href="#上电复位与掉电复位" aria-hidden="true">#</a> 上电复位与掉电复位</h4><ol><li>当电源电压异常时, 芯片会保持在复位状态, 防止强行工作带来的后果</li><li>当刚开始通电时 VDD &lt; VPOR, 芯片处于掉电复位状态</li><li>当 VDD &gt; VPOR 后, 芯片处于正常工作状态</li><li>当正常工作时, VDD &lt; VPDR, 芯片处于掉电复位状态</li></ol><h4 id="电压检测器-pvd" tabindex="-1"><a class="header-anchor" href="#电压检测器-pvd" aria-hidden="true">#</a> 电压检测器 PVD</h4><ol><li>除了自动检测, 还可以手动设置可编程电压检测器</li><li>当电压低于 VPVD 时, 产生 PVD中断(EXTI16)</li><li>可通过寄存器 PWR_CSR 设置 VPVD 等级(查表)</li></ol><h3 id="电源系统" tabindex="-1"><a class="header-anchor" href="#电源系统" aria-hidden="true">#</a> 电源系统</h3><ol><li>VDDA 供电, 将 VDD 单独分出给 ADC 模块供电, 提高精度</li><li>调压器供电, 为除了备份域与待机电路外的电路供电(1.8V), 包括内核, 外设, RAM <ol><li>运行模式 1.8V 区域全功率运行</li><li>停止模式 1.8V 区域所有时钟关闭(外设停止运行), 但保留内核寄存器和 SRAM 的内容</li><li>待机模式 1.8V 区域完全断电, 所有内容丢失</li></ol></li><li>备份供电, 通过 VBAT 供电(实际上为一个 3V 纽扣电池), 为 LSE 振动器, RTC 及备份寄存器供电, 断电后保持运行</li></ol><h3 id="功耗模式" tabindex="-1"><a class="header-anchor" href="#功耗模式" aria-hidden="true">#</a> 功耗模式</h3><p>STM32 具有 运行, 睡眠, 停止, 待机四种模式</p><h4 id="唤醒方式" tabindex="-1"><a class="header-anchor" href="#唤醒方式" aria-hidden="true">#</a> 唤醒方式</h4><ol><li>模式 WFI(wait for interrupt) 下, 由中断唤醒</li><li>模式 WFE(wait for event) 下, 由事件唤醒</li></ol><h4 id="睡眠模式" tabindex="-1"><a class="header-anchor" href="#睡眠模式" aria-hidden="true">#</a> 睡眠模式</h4><ol><li>除 NVIC, 系统时钟外, 内核停止, 所有外设照常工作</li><li>任意中断均可唤醒</li><li>唤醒后, 先退出中断服务函数, 然后从进入睡眠处继续运行</li><li>SLEEPDEEP = 0, 调用 WFI 或 WFE 指令进入</li></ol><h4 id="停止模式" tabindex="-1"><a class="header-anchor" href="#停止模式" aria-hidden="true">#</a> 停止模式</h4><ol><li>使用任意 EXTI 中断唤醒</li><li>唤醒后需要等待 HSI 启动与模式切换</li><li>唤醒后, 先退出中断服务函数, 然后从进入睡眠处继续运行</li><li>SLEEPDEEP = 1, PWR_CR 中位 PDDS = 0, 调用 WFI 或 WFE 指令进入</li></ol><h4 id="待机模式" tabindex="-1"><a class="header-anchor" href="#待机模式" aria-hidden="true">#</a> 待机模式</h4><ol><li>WKUP 上升沿, RTC 闹钟, 外部复位, IWDG 复位唤醒</li><li>唤醒后需要等待芯片复位</li><li>唤醒后相当于芯片复位, 从头开始执行代码</li></ol><h2 id="电源管理函数" tabindex="-1"><a class="header-anchor" href="#电源管理函数" aria-hidden="true">#</a> 电源管理函数</h2><ol><li>__WFI() 从 WFI 模式进入睡眠</li><li>__WFE() 从 WFE 模式进入睡眠</li><li>PWR_PVDLevelConfig() 配置电压检测等级</li></ol>',22),d=[h];function o(t,n){return a(),e("div",null,d)}const D=i(r,[["render",o],["__file","power.html.vue"]]);export{D as default};
