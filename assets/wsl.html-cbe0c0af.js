import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as d,c as r,b as e,d as a,a as n,w as c,e as i}from"./app-8c5ce49e.js";const h={},u=i(`<h1 id="wsl" tabindex="-1"><a class="header-anchor" href="#wsl" aria-hidden="true">#</a> WSL</h1><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><h3 id="直接安装" tabindex="-1"><a class="header-anchor" href="#直接安装" aria-hidden="true">#</a> 直接安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>wsl <span class="token parameter variable">--install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>打开 cmd 或 powershell, 输入以上指令, 直接安装 wsl, 默认为 Ubuntu</p><h3 id="安装特定版本" tabindex="-1"><a class="header-anchor" href="#安装特定版本" aria-hidden="true">#</a> 安装特定版本</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看可用版本, 也可使用命令 wsl -l -o</span>
wsl <span class="token parameter variable">--list</span> <span class="token parameter variable">--online</span>

<span class="token comment"># 安装特定版本</span>
wsl <span class="token parameter variable">--install</span> <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>版本名<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过以上命令安装特定版本的 Linux</p><h3 id="多版本管理" tabindex="-1"><a class="header-anchor" href="#多版本管理" aria-hidden="true">#</a> 多版本管理</h3><p>wsl 中允许安装多个版本的 Linux</p><ul><li><code>wsl --list --all</code> 列出所有安装的 Linux 版本</li><li><code>wsl --unregister &lt;Distro&gt;</code> 删除 Linux 版本 <code>Distro</code></li><li><code>wsl -s &lt;Distro&gt;</code> 设置 <code>Distro</code> 为默认启动版本</li></ul><h3 id="进入-wsl" tabindex="-1"><a class="header-anchor" href="#进入-wsl" aria-hidden="true">#</a> 进入 WSL</h3><ul><li>使用 <code>wsl</code> 可直接进入 WSL 中的 Linux 环境<br> 该命令进入的默认 Linux 版本可通过 <code>wsl -s &lt;Distro&gt;</code> 设置</li><li>使用 <code>wsl -d &lt;Distro&gt;</code> 进入版本为 <code>Distro</code> 的 Linux</li></ul><h3 id="关闭-wsl" tabindex="-1"><a class="header-anchor" href="#关闭-wsl" aria-hidden="true">#</a> 关闭 WSL</h3><p>运行 <code>wsl</code> 命令可直接启动<br> 但关闭 wsl 需要在外部终端中使用以下命令才可关闭</p><ul><li><code>wsl --shutdown</code> 关闭所有正在运行的 Linux</li><li><code>wsl --terminal &lt;Distro&gt;</code> 关闭版本名为 <code>Distro</code> 的 Linux</li></ul><h3 id="linux-导出与导入" tabindex="-1"><a class="header-anchor" href="#linux-导出与导入" aria-hidden="true">#</a> Linux 导出与导入</h3><ul><li><code>wsl --export &lt;Distro&gt; &lt;file&gt;</code> 导出 Linux 镜像 <ul><li><code>Distro</code> 被导出的 Linux 版本名</li><li><code>file</code> 导出镜像保存路径与文件名, 一般使用后缀 <code>.tar</code></li></ul></li><li><code>wsl --import &lt;Distro&gt; &lt;path&gt; &lt;file&gt;</code> 导入 Linux 镜像 <ul><li><code>Distro</code> 被导出的 Linux 版本名</li><li><code>path</code> Linux 虚拟硬盘所在路径</li><li><code>file</code> 导入的 Linux 镜像</li></ul></li></ul><h3 id="wsl-配置" tabindex="-1"><a class="header-anchor" href="#wsl-配置" aria-hidden="true">#</a> WSL 配置</h3><p>WSL 有如下的配置文件</p><ul><li>Windows 下文件 <code>C:\\User\\&lt;用户名&gt;\\.wslconfig</code> 应用于所有 WSL 的配置文件</li><li>WSL 内文件 <code>/etc/wsl.config</code> 用于特定 Linux 环境的配置文件</li></ul><p>常用的配置有 (注意 <code>\\n</code> 在配置文件中为换行)</p><ul><li>设置默认登录用户 <code>[user]\\ndefault=&lt;用户名&gt;</code></li></ul><h2 id="美化" tabindex="-1"><a class="header-anchor" href="#美化" aria-hidden="true">#</a> 美化</h2>`,24),p={href:"https://nerdfonts.com/",target:"_blank",rel:"noopener noreferrer"},b=e("h3",{id:"windows-终端",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows-终端","aria-hidden":"true"},"#"),a(" Windows 终端")],-1),m={href:"https://blog.csdn.net/Kaerwei/article/details/128759061",target:"_blank",rel:"noopener noreferrer"},w=e("p",null,"在 Windows 10 中, 需要首先在应用商店中安装 Windows Terminal",-1),_=e("ol",null,[e("li",null,"在 Windows Terminal 中设置为默认终端程序"),e("li",null,"设置 -> 配置文件 -> 默认值 -> 字体 中设置字体为 Hack Nerd Font")],-1),g=e("h3",{id:"vscode-终端",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vscode-终端","aria-hidden":"true"},"#"),a(" Vscode 终端")],-1),x={href:"https://www.python100.com/html/91131.html",target:"_blank",rel:"noopener noreferrer"},f=e("ol",null,[e("li",null,"打开设置, 搜索 Terminal Font"),e("li",null,"设置中输入字体名称 Hack Nerd Font Mono"),e("li",null,"将终端字体大小设置为小于等于 14 的值")],-1),v=e("h2",{id:"踩坑",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#踩坑","aria-hidden":"true"},"#"),a(" 踩坑")],-1),L=e("h3",{id:"github-无法使用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#github-无法使用","aria-hidden":"true"},"#"),a(" GitHub 无法使用")],-1),k={href:"https://blog.csdn.net/qq_31375855/article/details/121838533",target:"_blank",rel:"noopener noreferrer"},W=i(`<p>使用 github 时出现错误 <code>gnutls_handshake() failed: The TLS connection was non-properly</code></p><p>在终端中运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span>  <span class="token parameter variable">--unset</span> https.https://github.com.proxy 
<span class="token function">git</span> config <span class="token parameter variable">--global</span>  <span class="token parameter variable">--unset</span> http.https://github.com.proxy 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function D(S,y){const t=l("RouterLink"),s=l("ExternalLinkIcon");return d(),r("div",null,[u,e("p",null,[a("首先在 WSL 中安装 oh-my-zsh 与 p10k 主题, "),n(t,{to:"/coding/web/linux/software.html#oh-my-zsh"},{default:c(()=>[a("参见")]),_:1})]),e("p",null,[a("从网站 "),e("a",p,[a("https://nerdfonts.com/"),n(s)]),a(" 上下载所需要的字体, 推荐 Hack Nerd Font")]),b,e("p",null,[a("参考 "),e("a",m,[a("https://blog.csdn.net/Kaerwei/article/details/128759061"),n(s)])]),w,_,g,e("p",null,[a("参考 "),e("a",x,[a("https://www.python100.com/html/91131.html"),n(s)])]),f,v,L,e("p",null,[a("参考文章 "),e("a",k,[a("https://blog.csdn.net/qq_31375855/article/details/121838533"),n(s)])]),W])}const V=o(h,[["render",D],["__file","wsl.html.vue"]]);export{V as default};
