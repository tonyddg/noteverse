import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as t,b as s,d as a,e as n}from"./app-8c5ce49e.js";const c={},p=s("h1",{id:"实用数学函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#实用数学函数","aria-hidden":"true"},"#"),a(" 实用数学函数")],-1),i=s("h2",{id:"多项式",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#多项式","aria-hidden":"true"},"#"),a(" 多项式")],-1),o=s("p",null,[a("Matlab 中通常使用一个一维向量来表示多项式, 其中向量的第一个元素为最高次项, 向后递减直到 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" 次项")],-1),m=n(`<h3 id="conv-函数" tabindex="-1"><a class="header-anchor" href="#conv-函数" aria-hidden="true">#</a> <code>conv</code> 函数</h3><ul><li>功能: 计算多项式乘法</li><li>函数原型 <code>p = conv(p1, p2)</code></li><li>参数 <ul><li><code>p1, p2</code> 多项式数组<br> 参与多项式乘法的两个多项式</li></ul></li><li>返回值 返回相乘后的多项式</li><li>示例</li></ul><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token function">disp</span><span class="token punctuation">(</span><span class="token function">conv</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">2</span><span class="token operator">+</span><span class="token number">1i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),r=s("p",null,[a("示例计算了多项式相乘 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",null,"−"),s("mn",null,"2"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},"["),s("mn",null,"3"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"2"),s("mo",null,"+"),s("mi",null,"i"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"(x-2)[3+(2+i)]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mclose"},")"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},")]")])])]),a(" 并输出结果多项式")],-1),u=n(`<h3 id="roots-函数" tabindex="-1"><a class="header-anchor" href="#roots-函数" aria-hidden="true">#</a> <code>roots</code> 函数</h3><ul><li>功能: 求解多项式根</li><li>函数原型 <code>r = roots(p)</code></li><li>参数 <ul><li><code>p</code> 多项式数组<br> 用于求根的多项式</li></ul></li><li>返回值 由多项式根值组成的数组</li><li>示例</li></ul><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token function">disp</span><span class="token punctuation">(</span><span class="token function">roots</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">-</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">1i</span> <span class="token operator">-</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">1i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),h=s("p",null,[a("示例计算了多项式方程 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("msup",null,[s("mi",null,"x"),s("mn",null,"2")]),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mo",null,"−"),s("mn",null,"4"),s("mo",null,"+"),s("mi",null,"i"),s("mo",{stretchy:"false"},")"),s("mi",null,"x"),s("mo",null,"−"),s("mn",null,"4"),s("mo",null,"−"),s("mn",null,"2"),s("mi",null,"i"),s("mo",null,"="),s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"3x^2+(-4+i)x-4-2i=0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8974em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"−"),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},")"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" 的根并输出")],-1),d=[p,i,o,m,r,u,h];function g(b,k){return e(),t("div",null,d)}const v=l(c,[["render",g],["__file","utility.html.vue"]]);export{v as default};
