import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,e as n,b as a,d as s}from"./app-8c5ce49e.js";const i={},p=n('<h1 id="机器学习基本概念" tabindex="-1"><a class="header-anchor" href="#机器学习基本概念" aria-hidden="true">#</a> 机器学习基本概念</h1><h2 id="机器学习系统类型" tabindex="-1"><a class="header-anchor" href="#机器学习系统类型" aria-hidden="true">#</a> 机器学习系统类型</h2><h3 id="监督学习-p40" tabindex="-1"><a class="header-anchor" href="#监督学习-p40" aria-hidden="true">#</a> 监督学习 P40</h3><h4 id="有监督学习" tabindex="-1"><a class="header-anchor" href="#有监督学习" aria-hidden="true">#</a> 有监督学习</h4><ol><li>监督学习中, 提供给算法的数据包含所需要的解决方案, 即标签</li><li>可用于通过一组特征, 来预测一个目标数值 (回归问题)</li><li>也可用于分类任务</li></ol><h4 id="无监督学习" tabindex="-1"><a class="header-anchor" href="#无监督学习" aria-hidden="true">#</a> 无监督学习</h4><ol><li>无监督学习中训练数据都是未经标记的</li><li>可以用于让算法自动寻找数据的关联与关联规则 (聚类)</li><li>合并存在很大相关性的特征, 再用于监督学习, 以提升性能 (特征提取)</li><li>可视化数据</li><li>检测异常与移去异常数据</li></ol><h4 id="半监督学习" tabindex="-1"><a class="header-anchor" href="#半监督学习" aria-hidden="true">#</a> 半监督学习</h4><p>通常为两种算法的结合</p><h4 id="强化学习" tabindex="-1"><a class="header-anchor" href="#强化学习" aria-hidden="true">#</a> 强化学习</h4><p>通过自行学习最好的策略, 以获得最大的回报</p><h3 id="学习方式-p48" tabindex="-1"><a class="header-anchor" href="#学习方式-p48" aria-hidden="true">#</a> 学习方式 P48</h3><h4 id="批量学习" tabindex="-1"><a class="header-anchor" href="#批量学习" aria-hidden="true">#</a> 批量学习</h4><ol><li>使用所有可用的数据进行学习后导出</li><li>在完成训练前都是离线的, 即不投入生产环境</li><li>每次更新训练集需要从头开始</li></ol><h4 id="在线学习-增量学习" tabindex="-1"><a class="header-anchor" href="#在线学习-增量学习" aria-hidden="true">#</a> 在线学习 (增量学习)</h4><ol><li>小批量数据多次学习, 根据新写入的新数据进行学习</li><li>可以对数据流的变化做出快速反应</li><li>需要避免垃圾数据的影响</li></ol><h3 id="泛化学习-p52" tabindex="-1"><a class="header-anchor" href="#泛化学习-p52" aria-hidden="true">#</a> 泛化学习 P52</h3><h4 id="基于模型的学习" tabindex="-1"><a class="header-anchor" href="#基于模型的学习" aria-hidden="true">#</a> 基于模型的学习</h4><p>提前确定一个模型, 模型存在一些参数, 其特征未知, 通过训练, 找到最佳的参数 (如, 线性回归), 从而预测新实例的属性</p><h4 id="基于实例的学习" tabindex="-1"><a class="header-anchor" href="#基于实例的学习" aria-hidden="true">#</a> 基于实例的学习</h4><p>通过比较各个实例之间的相似度, 从而得到新实例</p><h2 id="机器学习的主要问题-p60" tabindex="-1"><a class="header-anchor" href="#机器学习的主要问题-p60" aria-hidden="true">#</a> 机器学习的主要问题 P60</h2><h3 id="数据方面" tabindex="-1"><a class="header-anchor" href="#数据方面" aria-hidden="true">#</a> 数据方面</h3><h4 id="训练数量不足" tabindex="-1"><a class="header-anchor" href="#训练数量不足" aria-hidden="true">#</a> 训练数量不足</h4><p>当数据量足够大, 各个算法之间差异性极小</p><h4 id="数据不具有代表性" tabindex="-1"><a class="header-anchor" href="#数据不具有代表性" aria-hidden="true">#</a> 数据不具有代表性</h4><p>数据采集方式不正确, 可能导致错误的结果</p><h4 id="数据质量低" tabindex="-1"><a class="header-anchor" href="#数据质量低" aria-hidden="true">#</a> 数据质量低</h4><ol><li>对于异常的数据, 需要丢弃或修复</li><li>缺少特征的数据需要处理</li></ol><h4 id="无关数据" tabindex="-1"><a class="header-anchor" href="#无关数据" aria-hidden="true">#</a> 无关数据</h4><p>过多的无关特征可能导致机器学习无法完成</p><h3 id="算法方面" tabindex="-1"><a class="header-anchor" href="#算法方面" aria-hidden="true">#</a> 算法方面</h3><h4 id="过度拟合" tabindex="-1"><a class="header-anchor" href="#过度拟合" aria-hidden="true">#</a> 过度拟合</h4><ol><li>当出现无关属性时 (如名称), 可能会导致算法检测噪音之间的关系 (名称中的字母)</li><li>模型中的参数过多时, 可能导致过渡拟合</li><li>解决方法: <ul><li>减少参数</li><li>给各个参数设定约束, 如给参数限定范围, 即正则化</li><li>收集更多数据</li><li>减少数据中的噪声</li></ul></li></ol><h4 id="欠拟合" tabindex="-1"><a class="header-anchor" href="#欠拟合" aria-hidden="true">#</a> 欠拟合</h4><ol><li>模型相对于实际太过于简单, 可能导致预测结果不准确</li><li>解决方法: <ul><li>增加模型中的参数</li><li>减少模型中的约束</li><li>提供更好的特征集</li></ul></li></ol><h2 id="测试与验证" tabindex="-1"><a class="header-anchor" href="#测试与验证" aria-hidden="true">#</a> 测试与验证</h2><h3 id="测试方法" tabindex="-1"><a class="header-anchor" href="#测试方法" aria-hidden="true">#</a> 测试方法</h3><ol><li>将数据分为两部分, 分为训练集 (80%) 与测试集 (20%)</li><li>通过测试集来评估模型的误差率</li><li>当模型对于训练集误差低, 而对于测试集的误差高, 则说明模型存在过拟合</li></ol><h3 id="超参数选择" tabindex="-1"><a class="header-anchor" href="#超参数选择" aria-hidden="true">#</a> 超参数选择</h3><ol><li>通过使用不同的超参数训练, 寻找训练集中准确率最高的超参数, 这个方法只能得到最拟合训练集的超参数, 对于测试集不一定合理</li><li>可使用保持验证的方法 <ol><li>将训练集再分出一部分作为验证集, 剩余部分为简化训练集</li><li>在简化训练集上使用不同超参数训练模型</li><li>在验证集上测试不同超参数下的模型, 得到最佳模型的超参数</li><li>将此最佳模型的超参数作为模型的超参数</li></ol></li></ol><h2 id="部分概念定义" tabindex="-1"><a class="header-anchor" href="#部分概念定义" aria-hidden="true">#</a> 部分概念定义</h2><h3 id="属性与特征" tabindex="-1"><a class="header-anchor" href="#属性与特征" aria-hidden="true">#</a> 属性与特征</h3><ol><li>属性表示一种数据类型</li><li>特征取决于上下文, 为属性加上其值</li></ol><h3 id="泛化" tabindex="-1"><a class="header-anchor" href="#泛化" aria-hidden="true">#</a> 泛化</h3><ol><li>即在经过给定的训练实例训练后, 对新的实例进行预测, 即泛化</li><li>而预测能力也可称为泛化能力</li></ol><h3 id="正则化" tabindex="-1"><a class="header-anchor" href="#正则化" aria-hidden="true">#</a> 正则化</h3><ol><li>对模型参数进行约束称为正则化, 如限制模型参数的大小不能超过一定值</li><li>正则化程度可通过一个超参数控制, 超参数也属于模型的参数, 但在训练前就确定</li></ol><h1 id="机器学习项目" tabindex="-1"><a class="header-anchor" href="#机器学习项目" aria-hidden="true">#</a> 机器学习项目</h1><h2 id="建立项目" tabindex="-1"><a class="header-anchor" href="#建立项目" aria-hidden="true">#</a> 建立项目</h2><h3 id="使用真实数据" tabindex="-1"><a class="header-anchor" href="#使用真实数据" aria-hidden="true">#</a> 使用真实数据</h3><p>可通过以下网站获取公开数据集</p><ol><li>UC Irvine Machine Learning Repository（http://archive.ics.uci.edu/ml/）</li><li>Kaggle datasets（https://www.kaggle.com/datasets）</li></ol><h3 id="确定方案" tabindex="-1"><a class="header-anchor" href="#确定方案" aria-hidden="true">#</a> 确定方案</h3><ol><li>建立模型前需要明确模型的目的, 从而确定算法, 模型性能的评估方法等</li><li>根据数据确定使用有监督学习, 无监督学习或强化学习 (数据集中, 是否包含了要预测的属性)</li><li>根据目标确定任务是分类任务, 或是回归任务 (对于给出的数据预测类型 / 预测值)</li><li>再确定要使用批量学习还是在线学习</li></ol><h3 id="选择性能指标" tabindex="-1"><a class="header-anchor" href="#选择性能指标" aria-hidden="true">#</a> 选择性能指标</h3>',56),c=a("ul",null,[a("li",null,[s("对于回归问题, 可采用均方根误差 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"R"),a("mi",null,"M"),a("mi",null,"S"),a("mi",null,"E")]),a("annotation",{encoding:"application/x-tex"},"RMSE")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"RMSE")])])]),s(" 作为性能指标, 判断预测值与实际值的误差, 其中 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"h")]),a("annotation",{encoding:"application/x-tex"},"h")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"h")])])]),s(" 为预测函数")])],-1),o=a("p",{class:"katex-block"},[a("span",{class:"katex-display"},[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("semantics",null,[a("mrow",null,[a("mi",null,"R"),a("mi",null,"M"),a("mi",null,"S"),a("mi",null,"E"),a("mo",{stretchy:"false"},"("),a("mi",null,"X"),a("mo",{separator:"true"},","),a("mi",null,"h"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("msqrt",null,[a("mrow",null,[a("mfrac",null,[a("mn",null,"1"),a("mi",null,"m")]),a("munderover",null,[a("mo",null,"∑"),a("mrow",null,[a("mi",null,"i"),a("mo",null,"="),a("mn",null,"1")]),a("mi",null,"m")]),a("mo",{stretchy:"false"},"("),a("mi",null,"h"),a("mo",{stretchy:"false"},"("),a("msup",null,[a("mi",null,"x"),a("mrow",null,[a("mo",{stretchy:"false"},"("),a("mi",null,"i"),a("mo",{stretchy:"false"},")")])]),a("mo",{stretchy:"false"},")"),a("mo",null,"−"),a("msup",null,[a("mi",null,"y"),a("mrow",null,[a("mo",{stretchy:"false"},"("),a("mi",null,"i"),a("mo",{stretchy:"false"},")")])]),a("msup",null,[a("mo",{stretchy:"false"},")"),a("mn",null,"2")])])])]),a("annotation",{encoding:"application/x-tex"}," RMSE(X,h)=\\sqrt{\\frac{1}{m}\\sum^m_{i=1}(h(x^{(i)})-y^{(i)})^2} ")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"RMSE"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"X"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"h"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"3.1568em","vertical-align":"-1.2777em"}}),a("span",{class:"mord sqrt"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"1.8791em"}},[a("span",{class:"svg-align",style:{top:"-5.1168em"}},[a("span",{class:"pstrut",style:{height:"5.1168em"}}),a("span",{class:"mord",style:{"padding-left":"1.056em"}},[a("span",{class:"mord"},[a("span",{class:"mopen nulldelimiter"}),a("span",{class:"mfrac"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"1.3214em"}},[a("span",{style:{top:"-2.314em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"m")])]),a("span",{style:{top:"-3.23em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),a("span",{style:{top:"-3.677em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"mord"},[a("span",{class:"mord"},"1")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.686em"}},[a("span")])])])]),a("span",{class:"mclose nulldelimiter"})]),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mop op-limits"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"1.6514em"}},[a("span",{style:{top:"-1.8723em","margin-left":"0em"}},[a("span",{class:"pstrut",style:{height:"3.05em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mathnormal mtight"},"i"),a("span",{class:"mrel mtight"},"="),a("span",{class:"mord mtight"},"1")])])]),a("span",{style:{top:"-3.05em"}},[a("span",{class:"pstrut",style:{height:"3.05em"}}),a("span",null,[a("span",{class:"mop op-symbol large-op"},"∑")])]),a("span",{style:{top:"-4.3em","margin-left":"0em"}},[a("span",{class:"pstrut",style:{height:"3.05em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mathnormal mtight"},"m")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"1.2777em"}},[a("span")])])])]),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"h"),a("span",{class:"mopen"},"("),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"x"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.814em"}},[a("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mopen mtight"},"("),a("span",{class:"mord mathnormal mtight"},"i"),a("span",{class:"mclose mtight"},")")])])])])])])])]),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"−"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.814em"}},[a("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mopen mtight"},"("),a("span",{class:"mord mathnormal mtight"},"i"),a("span",{class:"mclose mtight"},")")])])])])])])])]),a("span",{class:"mclose"},[a("span",{class:"mclose"},")"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.7401em"}},[a("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"2")])])])])])])])])]),a("span",{style:{top:"-3.8391em"}},[a("span",{class:"pstrut",style:{height:"5.1168em"}}),a("span",{class:"hide-tail",style:{"min-width":"0.742em",height:"3.1968em"}},[a("svg",{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"3.1968em",viewBox:"0 0 400000 3196",preserveAspectRatio:"xMinYMin slice"},[a("path",{d:`M702 80H40000040
H742v3062l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1
h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170
c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667
219 661 l218 661zM702 80H400000v40H742z`})])])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"1.2777em"}},[a("span")])])])])])])])])],-1),r=a("ul",null,[a("li",null,[s("将 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"h"),a("mo",{stretchy:"false"},"("),a("mi",null,"x"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"h(x)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"h"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"x"),a("span",{class:"mclose"},")")])])]),s(" 与 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"y")]),a("annotation",{encoding:"application/x-tex"},"y")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")])])]),s(" 视为向量, 回归的性能指标即范数, 但范数级别越高, 对异常越敏感, 越关注最大值, 因此通常采用 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"R"),a("mi",null,"M"),a("mi",null,"S"),a("mi",null,"E")]),a("annotation",{encoding:"application/x-tex"},"RMSE")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"RMSE")])])]),s(", 即 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"p"),a("mo",null,"−"),a("mn",null,"2")]),a("annotation",{encoding:"application/x-tex"},"p-2")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal"},"p"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"−"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"2")])])]),s(" 范数")]),a("li",null,[s("对于异常值较多的情况也可采用 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"p"),a("mo",null,"−"),a("mn",null,"1")]),a("annotation",{encoding:"application/x-tex"},"p-1")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal"},"p"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"−"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"1")])])]),s(" 范数")])],-1),u=n(`<h3 id="方案检查" tabindex="-1"><a class="header-anchor" href="#方案检查" aria-hidden="true">#</a> 方案检查</h3><p>在确定了方案与性能指标后, 检查方案是否能够正常投入使用</p><h2 id="构建项目" tabindex="-1"><a class="header-anchor" href="#构建项目" aria-hidden="true">#</a> 构建项目</h2><h3 id="下载数据" tabindex="-1"><a class="header-anchor" href="#下载数据" aria-hidden="true">#</a> 下载数据</h3><p>通过编写函数来下载数据, 可以方便数据更新与管理</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> tarfile
<span class="token keyword">import</span> urllib

<span class="token comment"># 下载数据压缩包</span>
<span class="token keyword">def</span> <span class="token function">FetchTarData</span><span class="token punctuation">(</span>data_url<span class="token punctuation">,</span> save_path<span class="token punctuation">,</span> data_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
    data_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> data_name<span class="token punctuation">)</span>
    
    <span class="token comment"># 从网络上下载数据</span>
    urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>data_url<span class="token punctuation">,</span> data_path<span class="token punctuation">)</span>

    <span class="token comment"># 对下载的数据解压缩</span>
    data_taz <span class="token operator">=</span> tarfile<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>data_path<span class="token punctuation">)</span>
    data_taz<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span>path <span class="token operator">=</span> save_path<span class="token punctuation">)</span>
    data_taz<span class="token punctuation">.</span>close
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样可以通过一个函数对数据进行读取, 此处使用 Pandas 进行数据分析</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token keyword">def</span> <span class="token function">LoadCSVData</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> data_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    csv_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> data_name<span class="token punctuation">)</span>

    <span class="token comment"># 读取 csv 中的数据并返回 pandas DataFrame 对象</span>
    <span class="token keyword">return</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>csv_path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="预览数据" tabindex="-1"><a class="header-anchor" href="#预览数据" aria-hidden="true">#</a> 预览数据</h3><ol><li>使用 DataFrame 的 head() 方法可以查看数据的前 5 行</li><li>使用 DataFrame 的 info() 方法可以查看数据各列的数据类型, 行数, 非空行数等信息; 对于 object 类型可能为 string</li><li>通常统计表的字符串用于表示分类, 因此可以访问 DataFrame 的特定列, 并使用 value_counts 方法统计各个值出现的次数</li><li>使用 DataFrame 的 head() 方法可以查看数据各列的基本统计值, 如最大值, 平均值, 方差等</li><li>借助 Matplotlib, 使用 hist 方法绘制数据直方图 (以数据区间为 x 坐标, 以数据出现次数为 y 坐标)</li><li>可以直接调用 DataFrame 的方法显示数据, 但个代码块中仅能输出一个, 也可采用 print 输出显示数据的方法, 但将丢失样式</li><li>DataFrame 的方法显示数据前, 可直接对结构进行一些简单运算, 并且输出时将为运算后的结果</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>houseData <span class="token operator">=</span> LoadCSVData<span class="token punctuation">(</span>HOUSING_PATH<span class="token punctuation">,</span> <span class="token string">&quot;housing.csv&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># houseData.head()</span>
<span class="token comment"># houseData.info()</span>
<span class="token comment"># houseData[&quot;ocean_proximity&quot;].value_counts()</span>
<span class="token comment"># houseData.describe()</span>

<span class="token comment"># 通过 len(houseData) 获取 DataFrame 的行数, 并且除以 value_counts() 的结果, 得到数据分布</span>
<span class="token comment"># houseData[&quot;ocean_proximity&quot;].value_counts() / len(houseData)</span>

<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
houseData<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>bins<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据观察" tabindex="-1"><a class="header-anchor" href="#数据观察" aria-hidden="true">#</a> 数据观察</h3><p>对数据预览的结果进行观察, 需要注意以下方面</p><ol><li>数据是否经换算</li><li>数据是否存在上限与下限 (数据在一侧集中, 且再往外就没有数据)</li><li>数据分布情况, 对于数据在中位数两侧延伸长度相差过大时, 需要注意</li></ol><h3 id="创建测试集" tabindex="-1"><a class="header-anchor" href="#创建测试集" aria-hidden="true">#</a> 创建测试集</h3><ul><li>在开始机器学习前, 需要将数据划分为 测试集 (test set) 与训练集 (train set)</li><li>数据量较少时, 可以划分 20% 的数据作为测试集, 数据量大时, 测试集所占的比例可以减少</li><li>划分完成后, 每次使用测试集与训练集前 (数据可视化) , 应对数据集的拷贝进行操作</li><li>除了进行验证, 尽量不再使用测试集中的数据</li></ul><h4 id="划分原则" tabindex="-1"><a class="header-anchor" href="#划分原则" aria-hidden="true">#</a> 划分原则</h4><ol><li>每次划分时, 应当保证测试集与训练集的数据不变 (仅使用随机划分时, 由于种子不同, 可能导致每次运行, 数据划分不同)</li><li>每次添加数据后, 应保证原来的数据划分不变</li><li>划分数据时, 还应该保证两个数据集的数据分布特征保持一致, 至少<mark>最重要的数据 (通常是预测值)</mark> 分布特征保持一致 (分层划分)</li></ol><h4 id="随机划分" tabindex="-1"><a class="header-anchor" href="#随机划分" aria-hidden="true">#</a> 随机划分</h4><ol><li>当数据较多时, 可使用 sklearn.model_selection.train_test_split() 函数对数据进行随机划分</li><li>通过限定随机种子 (random_state 参数), 可以满足原则 1 的要求</li></ol><h4 id="特征值划分" tabindex="-1"><a class="header-anchor" href="#特征值划分" aria-hidden="true">#</a> 特征值划分</h4><ol><li>选择数据中的几个特征属性作为特征值, 并对特征值取哈希函数</li><li>哈希函数的大小划分数据, 可以满足原则 1, 2 的要求</li></ol><h4 id="分层-stratified-划分" tabindex="-1"><a class="header-anchor" href="#分层-stratified-划分" aria-hidden="true">#</a> 分层 (Stratified) 划分</h4><ol><li>对关键数据按一定区间划分, 并使用一个临时列来对存放各个区间的标签, 通常可采用 pd.cut() 完成</li><li>通过对象 sklearn.model_selection.StratifiedShuffleSplit 完成分层划分</li><li>完成分层后, 可遍历得到元素集的各行, 使用 drop 方法, 去除临时列</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 通过访问一个新列将自动创建</span>
houseData<span class="token punctuation">[</span><span class="token string">&quot;income_cat&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>cut<span class="token punctuation">(</span>
    <span class="token comment"># 划分属性</span>
    houseData<span class="token punctuation">[</span><span class="token string">&quot;median_income&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment"># 划分区间</span>
    bins<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">4.5</span><span class="token punctuation">,</span> <span class="token number">6.</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>inf<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment"># 区间标记</span>
    labels<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> StratifiedShuffleSplit
<span class="token comment"># 通过 StratifiedShuffleSplit 变量确定分层方式</span>
split <span class="token operator">=</span> StratifiedShuffleSplit<span class="token punctuation">(</span>n_splits<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>

<span class="token comment"># 使用 split 方法进行分类, 返回一个迭代器</span>
<span class="token comment"># 迭代器仅包含一个结果, 即选取作为训练集与测试集数据索引的数组构成的元组</span>
<span class="token comment"># 通过 for 访问迭代器, 并根据得到的索引从数据中构建训练集与测试集, 实际仅循环一次</span>

<span class="token comment"># DataFrame 成员 loc[行, 列] 为按行与列索引特定元素, 并构成一个新的 DataFrame, 列缺省时表示全部列</span>
<span class="token keyword">for</span> train_index<span class="token punctuation">,</span> test_index <span class="token keyword">in</span> split<span class="token punctuation">.</span>split<span class="token punctuation">(</span>houseData<span class="token punctuation">,</span> houseData<span class="token punctuation">[</span><span class="token string">&quot;income_cat&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    strat_train_set <span class="token operator">=</span> houseData<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>train_index<span class="token punctuation">]</span>
    strat_test_set <span class="token operator">=</span> houseData<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>test_index<span class="token punctuation">]</span>

<span class="token comment"># 比较两个数据集的数据分布, 如果差别过大可减小区间</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;train&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>strat_train_set<span class="token punctuation">[</span><span class="token string">&quot;income_cat&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>strat_train_set<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>strat_test_set<span class="token punctuation">[</span><span class="token string">&quot;income_cat&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>strat_test_set<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token comment"># 通过 for 访问各行, 并将临时列丢弃</span>
<span class="token keyword">for</span> set_ <span class="token keyword">in</span> <span class="token punctuation">(</span>strat_train_set<span class="token punctuation">,</span> strat_test_set<span class="token punctuation">)</span><span class="token punctuation">:</span>
    set_<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&quot;income_cat&quot;</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据可视化" tabindex="-1"><a class="header-anchor" href="#数据可视化" aria-hidden="true">#</a> 数据可视化</h3><h4 id="含坐标数据的可视化" tabindex="-1"><a class="header-anchor" href="#含坐标数据的可视化" aria-hidden="true">#</a> 含坐标数据的可视化</h4><p>调用 DataFrame 的成员方法 plot 可以进行对数据的绘制</p><ul><li>kind 绘制图像形式, scatter 即散点图</li><li>x 数据点的 x 坐标 (可以传入列名, 或出入具体列, 方便运算)</li><li>y 数据点的 y 坐标</li><li>alpha 散点的透明度, 采用较低的透明度有利于发现位置集中的散点</li><li>s 散点的大小, 可通过散点的半径来反映部分数据, 为了防止半径过大, 可预先除以一定比例</li><li>figsize 图像大小</li><li>label 图像标签</li><li>c 散点的颜色, 可通过散点的颜色来反映部分数据</li><li>cmap 颜色标记条, 可通过 plt.get_cmap 获取</li><li>colorbar 是否显示颜色标记条</li></ul><h4 id="数据相关性可视化" tabindex="-1"><a class="header-anchor" href="#数据相关性可视化" aria-hidden="true">#</a> 数据相关性可视化</h4><ol><li>通过 corr 方法获取 DataFrame 中各个数据之间的相关系数</li><li>得到的结果也为一个 DataFrame, 但每一行的标签为原来的列, 每一格的数据即相关系数</li><li>访问预测值 (或关键数据) 所在列, 并使用 sort_values 函数列出各个参数与其之间的相关系数, 可初步判断参数之间的相关性</li><li>通过 pandas.plotting.scatter_matrix 绘制各个参数之间作为 x 与 y 轴的散点图, 以直观体现各个参数之间的关系</li><li>注意图像中可能出现的一些反常直线, 表明可能有怪异数据, 需要处理</li><li>可以将不同元素组合, 如乘除运算, 将结果作为一个新列, 并与预测值比较相关性</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pandas<span class="token punctuation">.</span>plotting <span class="token keyword">import</span> scatter_matrix
<span class="token comment"># 由于参数过多, 可以仅选择几个感兴趣的参数</span>
attributes <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;median_house_value&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;median_income&quot;</span><span class="token punctuation">,</span> 
    <span class="token string">&quot;total_rooms&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;housing_median_age&quot;</span><span class="token punctuation">]</span>
<span class="token comment"># 使用一个包含了多列的名数组访问 DataFrame, 可以提取这几列的数据</span>
scatter_matrix<span class="token punctuation">(</span>houseData<span class="token punctuation">[</span>attributes<span class="token punctuation">]</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据准备" tabindex="-1"><a class="header-anchor" href="#数据准备" aria-hidden="true">#</a> 数据准备</h3><h4 id="数据清理" tabindex="-1"><a class="header-anchor" href="#数据清理" aria-hidden="true">#</a> 数据清理</h4>`,34),d=[p,c,o,r,u];function m(h,k){return e(),l("div",null,d)}const g=t(i,[["render",m],["__file","base.html.vue"]]);export{g as default};
